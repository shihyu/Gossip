<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JSF/ActionEvent.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:18:15 GMT -->
<head>







  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">







  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">







  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">







  
  
  
  
  
  
  
  <title>動作事件</title>
</head>


<body>







<h3><a href="../index.html">From
Gossip@Openhome</a></h3>







<h1><a href="index-2.html">JSF Gossip:&nbsp;動作事件 </a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 250px; text-align: center; vertical-align: top;"><script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br><br>
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>




      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>




      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>




      <br>



      
      
      
      <center>
      
      
      
       <br>




      </center>




 </td>


      <td style="vertical-align: top; width: 690px; text-align: left;">
      <small>





JSF支援事件處理模型，雖然由於HTTP本身無狀態（stateless）的特性，使得這個模型多少有些地方仍不太相同，但JSF所提供的事件處理模型已足以讓一些傳統GUI程式的設計人員，可以用類似的模型來開發程式。<br>

      <br>


在 <a href="SimpleNavigation.htm">簡單的導航</a> 中，我們根據動作方法（action
method）的結果來決定要導向的網頁，一個按鈕繫結至一個方法，這樣的作法實際上即使JSF所提供的簡化的事件處理程序，在按鈕上使用action繫
結至一個動作方法（action
method），實際上JSF會為其自動產生一個「預設的ActionListener」來處理事件，並根據其傳回值來決定導向的頁面。<br>

      <br>


如果您需要使用同一個方法來應付多種事件來源，並想要取得事件來源的相關訊息，您可以讓處理事件的方法接收一個 javax.faces.event.ActionEvent事件參數，例如：</small>

      <br>







      
      <ul>

        <li>UserBean.java</li>

      
      </ul>












      
      <pre>package onlyfun.caterpillar;<br><br>import javax.faces.event.ActionEvent;<br><br>public class UserBean {<br>    private String name;<br>    private String password;<br>    private String errMessage;<br>    private String outcome;<br>   <br>    public void setName(String name) {<br>        this.name = name;<br>    }<br>   <br>    public String getName() {<br>        return name;<br>    }<br>   <br>    public void setPassword(String password) {<br>        this.password = password;<br>    }<br>   <br>    public String getPassword() {<br>        return password;<br>    }<br>   <br>    public void setErrMessage(String errMessage) {<br>        this.errMessage = errMessage;<br>    }<br>   <br>    public String getErrMessage() {<br>        return errMessage;<br>    }<br>   <br>    public void verify(ActionEvent e) {<br>        if(!name.equals("justin") ||<br>           !password.equals("123456")) {<br>            errMessage = "名稱或密碼錯誤" + e.getSource();<br>            outcome = "failure";<br>        }<br>        else {<br>            outcome = "success";<br>        }<br>    }<br><br>    public String outcome() {<br>        return outcome;<br>    }<br>}</pre>







      <br>

      <small>
在上例中，我們讓verify方法接收一個ActionEvent物件，當使用者按下按鈕，會自動產生ActionEvent物件代表事件來源，我們故意在錯誤訊息之後如上事件來源的字串描述，這樣就可以在顯示錯誤訊息時一併顯示事件來源描述。<br>

      <br>


為了提供ActionEvent的存取能力，您的index.jsp可以改寫如下：</small>
      <br>


      
      <ul>

        <li>index.jsp</li>

      
      </ul>


      
      <pre>&lt;%@ taglib uri="http://java.sun.com/jsf/core" prefix="f" %&gt;<br>&lt;%@ taglib uri="http://java.sun.com/jsf/html" prefix="h" %&gt;<br>&lt;%@page contentType="text/html;charset=Big5"%&gt; <br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;title&gt;第一個JSF程式&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;f:view&gt;<br>        &lt;h:form&gt;<br>            &lt;h3&gt;請輸入您的名稱&lt;/h3&gt;<br>            &lt;h:outputText value="#{user.errMessage}"/&gt;&lt;p&gt;<br>           名稱: &lt;h:inputText value="#{user.name}"/&gt;&lt;p&gt;<br>           密碼: &lt;h:inputSecret value="#{user.password}"/&gt;&lt;p&gt; <br>            &lt;h:commandButton value="送出" <br>                            actionListener="#{user.verify}"<br>                            action="#{user.outcome}"/&gt;<br>        &lt;/h:form&gt;<br>    &lt;/f:view&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</pre>


      <br>

      <small>
主要改變的是按鈕上使用了actionListener屬性，這種方法可以使用一個ActionListener，JSF會先檢查是否有指定的
actionListener，然後再檢查是否指定了動作方法並產生預設的ActionListener，並根據其傳回值導航頁面。<br>

      <br>


如果您要註冊多個ActionListener，例如當使用者按下按鈕時，順便在記錄檔中增加一些記錄訊息，您可以實作 javax.faces.event.ActionListener，例如：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;package onlyfun.caterpillar;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;import javax.faces.event.ActionListener;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;....</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public class LogHandler implements ActionListener {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp; public void processAction(ActionEvent e) {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 處理Log</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;package onlyfun.caterpillar;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;import javax.faces.event.ActionListener;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;....</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public class VerifyHandler implements ActionListener {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp; public void processAction(ActionEvent e) {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 處理驗證</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br>


      </small></div>

      <small>
&nbsp;<br>

      <br>


這麼一來，您就可以使用&lt;f:actionListener&gt;標籤向元件註冊事件，例如：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&lt;h:commandButton value="送出" action="#{user.outcome}"&gt;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; &lt;f:actionListener type="onlyfun.caterpillar.LogHandler"/&gt;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; &lt;f:actionListener type="onlyfun.caterpillar.VerifyHandler"/&gt;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&lt;/h:commandButton&gt;</span><br>


      </small></div>

      <small>
&nbsp;<br>

      <br>


&lt;f:actionListener&gt;會自動產生type所指定的物件，並呼叫元件的addActionListener()方法註冊 Listener。</small>
      </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>


<br>







<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JSF/ActionEvent.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:18:15 GMT -->
</html>
