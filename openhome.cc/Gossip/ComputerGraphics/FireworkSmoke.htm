<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/ComputerGraphics/FireworkSmoke.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:07:02 GMT -->
<head>










  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type"><title>煙火與煙</title></head><body>









<h3><a href="../index.html">From
Gossip@Openhome</a></h3>









<h1><a href="index-2.html">Computer Graphics:&nbsp;煙火與煙</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 250px; text-align: center; vertical-align: top;"><script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br><br>
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>







      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>







      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>







      <br>






      
      
      
      
      
      
      <center>
      
      
      
      
      
      
       <br>







      </center>







 </td>


      <td style="vertical-align: top; width: 690px; text-align: left;">
      <small>







事實上之前的煙火在施放時並沒有煙，只有火花，可以結合兩個粒子系統來製作煙火在燃燒過程中所產生的煙硝軌跡。<br>

      <br>


在結合兩個粒子系統時，要注意，每個粒子都是獨立的，火花粒子就是火花粒子，不會與煙粒子相互影響，只不過煙粒子產生的位置是火花的目前位置，只要將位置的資訊傳遞給煙粒子物件就可以了。<br>

      <br>


指定煙粒子的方式採用比較簡單的方式，首先產生足夠的煙粒子，它們的狀態都為false，然後等待重新指定它們為復活狀態，每次繪製完火花後，在一堆煙粒子物件中尋找狀態為false的煙粒子，然後指定新的初始位置給這些粒子，如此煙粒子就會跟隨著火花的軌跡而產生了。<br>

      <br>


這邊需要之前製作的FireworkParticle與SmokeParticle類別，您可以直接看看 <a href="applet/FireworkAndSmoke.html">範例</a>。</small>


      <br>









      
      <ul>

        <li> FireworkAndSmoke.java </li>

      
      </ul>



      
      <pre>package cc.openhome.particle;<br><br>import java.awt.*;<br>import javax.swing.JApplet;<br><br>import static java.lang.Math.*;<br><br>public class FireworkAndSmoke extends JApplet implements Runnable {<br>    private final int FIREWORK_MAX = 255;<br>    private final int SMOKE_MAX = FIREWORK_MAX * 10;<br>    private FireworkParticle[] fireworks; // 煙火粒子<br>    private SmokeParticle[] smokes; // 煙粒子<br>    private int xCenter, yCenter;<br>    private Image offScreen;<br>    private Graphics gOffScreen;<br><br>    public void init() {<br>        setSize(640, 480);<br>        setBackground(Color.black); // 背景為黑色<br><br>        // 建立粒子<br>        fireworks = new FireworkParticle[FIREWORK_MAX]; <br>        smokes = new SmokeParticle[SMOKE_MAX];<br><br>        // 煙火初始位置<br>        xCenter = (int) (getWidth() / 2 + random() * 150 - 150);<br>        yCenter = (int) (getHeight() / 2 + random() * 150 - 150);<br>        <br>        for (int i = 0; i &lt; FIREWORK_MAX; i++) {<br>            fireworks[i] = new FireworkParticle();<br>        }<br>        for (int i = 0; i &lt; SMOKE_MAX; i++) {<br>            smokes[i] = new SmokeParticle();<br>        }<br><br>        // 建立次畫面<br>        offScreen = createImage(getWidth(), getHeight());<br>        gOffScreen = offScreen.getGraphics();<br>    }<br><br>    public void start() {<br>        (new Thread(this)).start();<br>    }<br><br>    public void update(Graphics g) {<br>        paint(g);<br>    }<br><br>    public void paint(Graphics g) {<br>        g.drawImage(offScreen, 0, 0, this);<br>    }<br><br>    public void run() {<br>        while (true) {<br>            boolean replay = true;<br><br>            for (FireworkParticle firework : fireworks) {<br>                if (firework.isAlive()) {<br>                    replay = false;<br>                    break;<br>                }<br>            }<br><br>            // 是否重新施放<br>            if (replay) {<br>                for (FireworkParticle firework : fireworks) {<br>                    firework.resume(xCenter, yCenter, FIREWORK_MAX);<br>                    firework.setLife((int) (random() * 20));<br>                }<br>            }<br>            <br>            gOffScreen.clearRect(0, 0, getWidth(), getHeight());<br><br>            for(SmokeParticle smoke : smokes) {<br>                if (smoke.isAlive()) {<br>                    double sx = smoke.getPoint().getX();<br>                    double sy = smoke.getPoint().getY();<br>                    gOffScreen.setColor(smoke.getColor());<br>                    gOffScreen.fillOval((int) sx, (int) sy, 4, 4);<br>                    smoke.nextState();<br>                }<br>            }<br><br>            for (FireworkParticle firework : fireworks) {<br>                if (firework.isAlive()) {<br>                    double x = firework.getPoint().getX();<br>                    double y = firework.getPoint().getY();<br><br>                    gOffScreen.setColor(firework.getColor());<br>                    gOffScreen.fillOval((int) x, (int) y, 3, 3);<br><br>                    // 為煙火加上煙<br>                    for(SmokeParticle smoke : smokes) {<br>                        if (!smoke.isAlive()) {<br>                            smoke.setLife((int) (50 * random()));<br>                            smoke.resume((int) x, (int) y);<br>                            break;<br>                        }<br>                    }<br><br>                    firework.nextState();<br>                }<br>            }<br><br>            // 重繪畫面<br>            repaint();<br><br>            // 暫停執行緒 150 毫秒<br>            try {<br>                Thread.sleep(150);<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>        }<br>    }<br>}</pre>


      <br>
      <small>以下是使用HTML5 Canvas的方式（如果瀏覽器支援HTML5 Canvas，例如最新版的Firexfox、Chrome、IE9等，可以直接將下面的內容存為HTML或按下檔名連結，直接載入瀏覽器執行觀看結果：<br>
      </small>
      <ul>
        <li><small><a href="html/FireWorkSmoke-1.html">FireworkSmoke-1.html</a></small></li>
      </ul>
      <pre>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;meta content="text/html; charset=Big5" http-equiv="content-type"&gt;<br>        &lt;script type="text/javascript"&gt;<br>            window.onload = function() {<br>                function Color(r, g, b) {<br>                    this.r = r;<br>                    this.g = g;<br>                    this.b = b;<br>                    this.toString = function() {<br>                        return 'rgb(' + <br>                           [this.r, this.g, this.b].join() + ')';<br>                    };<br>                }<br>                <br>                function Point(x, y) {<br>                    this.x = x || 0;<br>                    this.y = y || 0;<br>                    this.setLocation = function(x, y) {<br>                        this.x = x;<br>                        this.y = y;<br>                    };<br>                }<br>                <br>                function FireworkParticle() {<br>                    var LIFE_LESS_5 = new Color(255, 0, 0);<br>                    var LIFE_LESS_2 = new Color(0, 0, 255);<br>                    var position = new Point();  // 粒子的位置<br>                    var vx = vy = 0;             // 粒子的速度<br>                    var color = null;            // 粒子的顏色<br>                    var time = 0;                // 粒子存活至今的時間<br>                    this.life = 0;               // 粒子的生命值<br><br>                    this.resume = function(x, y, max) {<br>                        position.setLocation(x, y);<br>                        vx = Math.random() * max - Math.random() * max;<br>                        vy = Math.random() * max - Math.random() * max;<br>                        color = new Color(parseInt(Math.random() * 255),<br>                                          parseInt(Math.random() * 255),<br>                                          parseInt(Math.random() * 255));<br>                        time = 0;<br>                    };<br><br>                    this.isAlive = function() {<br>                        return this.life &gt; 0;<br>                    };<br><br>                    this.getPoint = function() {<br>                        return position;<br>                    };<br><br>                    this.getColor = function() {<br>                        return color;<br>                    };<br><br>                    this.nextState = function() {<br>                         vy += 9.8 * time;<br>                         position.setLocation(<br>                             position.x + vx * 0.1,<br>                             position.y + vy * 0.01);<br>                         this.life--;<br>                         time++;<br>                         if (this.life &lt; 2) {<br>                             color = LIFE_LESS_2;<br>                         } else if(this.life &lt; 5) {<br>                             color = LIFE_LESS_5;<br>                         }<br>                    };<br>                }<br><br>                function SmokeParticle() {<br>                    var position = new Point();  // 位置<br>                    var vx = vy = 0;             // 水平與垂直速度<br>                    this.weight = 0;              // 重量 <br>                    this.life = 0;                // 生命週期<br><br>                    this.resume = function(x, y) {<br>                        position.setLocation(x, y);<br>                        vx = 0;<br>                        vy = -1;<br>                        this.weight = 10 * Math.random() + 1;<br>                    };<br><br>                    this.getPoint = function() {<br>                        return position;<br>                    };<br><br>                    this.getColor = function() {<br>                        return new Color(this.life, this.life, this.life);<br>                    };<br><br>                    this.isAlive = function() {<br>                        return this.life &gt; 0;<br>                    };<br><br>                    this.nextState = function() {<br>                        position.setLocation(position.x, position.y + vy);<br>                        this.life--;<br>                    };<br>                }<br><br>                var canvas1 = document.getElementById('canvas1');<br>                var canvas2 = document.getElementById('canvas2');<br>                var context1 = canvas1.getContext('2d');<br>                var context2 = canvas2.getContext('2d');<br>                <br>                <br>                var FIREWORK_MAX = 200;<br>                var SMOKE_MAX = FIREWORK_MAX * 10;<br>                <br>                var fireworks = []; // 建立粒子<br>                                  <br>                for(var i = 0; i &lt; FIREWORK_MAX; i++) {<br>                    fireworks[i] = new FireworkParticle();<br>                }<br>                <br>                var smokes = [];<br>                for(var i = 0; i &lt; SMOKE_MAX; i++) {<br>                    smokes[i] = new SmokeParticle();<br>                }<br><br>                var context = context2;<br>                setTimeout(function() {<br>                    var replay = true;<br>                    for(var i in fireworks) {<br>                       var firework = fireworks[i];<br>                       if(firework.isAlive()) {<br>                           replay = false;<br>                           break;<br>                       }<br>                    }<br>                    <br>                    // 是否重新施放<br>                    if(replay) {<br>                        for(var i in fireworks) {<br>                            // 煙火初始位置<br>                            var xCenter = canvas1.width / 2 + <br>                                  Math.random() * 150 - 150;<br>                            var yCenter = canvas1.height / 2.5 + <br>                                  Math.random() * 150 - 150;<br>                            var firework = fireworks[i];<br>                            firework.resume(xCenter, yCenter, FIREWORK_MAX);<br>                            firework.life = <br>                                  parseInt(Math.random() * 20);<br>                        }<br>                    }<br>                    <br>                    context.fillStyle = 'rgb(0, 0, 0)';<br>                    context.fillRect(0, 0, canvas1.width, canvas1.height);<br><br>                    for(var i in smokes) {<br>                        var smoke = smokes[i];<br>                        if(smoke.isAlive()) {<br>                            var sx = smoke.getPoint().x;<br>                            var sy = smoke.getPoint().y;<br>                            context.fillStyle = smoke.getColor().toString();<br>                            context.beginPath();<br>                            context.arc(sx, sy, 2, 0, 2 * Math.PI, true);<br>                            context.closePath();<br>                            context.fill();<br>                            smoke.nextState();<br>                        }<br>                    }<br>                    <br>                    for(var i in fireworks) {<br>                        var firework = fireworks[i];<br>                        if(firework.isAlive()) {<br>                            var x = firework.getPoint().x;<br>                            var y = firework.getPoint().y;<br>                           <br>                            context.fillStyle = <br>                                firework.getColor().toString();<br>                            context.beginPath();<br>                            context.arc(x, y, 2, 0, 2 * Math.PI, true);<br>                            context.closePath();<br>                            context.fill();        <br>                            <br>                            firework.nextState();<br>                        }<br>                    }          <br><br>                    // 為煙火加上煙<br>                    for(var i in fireworks) {<br>                        var firework = fireworks[i];<br>                        if(firework.isAlive()) {       <br>                            var x = firework.getPoint().x;<br>                            var y = firework.getPoint().y;<br>                            for(var j in smokes) {<br>                                var smoke = smokes[j];<br>                                if (!smoke.isAlive()) {<br>                                    smoke.life = <br>                                        parseInt(50 * Math.random());<br>                                    smoke.resume(x, y);<br>                                    break;<br>                                }<br>                            }<br>                        }<br>                    }<br>                                                            <br>                    if(context === context2) {<br>                        document.body.replaceChild(canvas2, canvas1);<br>                        context = context1;<br>                    }<br>                    else {<br>                        document.body.replaceChild(canvas1, canvas2);<br>                        context = context2;<br>                    }<br>                    <br>                    setTimeout(arguments.callee, 200);<br>                }, 200);<br>            };<br>        &lt;/script&gt;<br>    &lt;/head&gt;<br>    &lt;body&gt;       <br>        &lt;canvas id="canvas1" width="640" height="480"&gt;&lt;/canvas&gt;<br>        &lt;canvas id="canvas2" width="640" height="480"&gt;&lt;/canvas&gt;<br>    &lt;/body&gt;<br>&lt;/html&gt;<br></pre>
<br>

      </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>









<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/ComputerGraphics/FireworkSmoke.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:07:02 GMT -->
</html>