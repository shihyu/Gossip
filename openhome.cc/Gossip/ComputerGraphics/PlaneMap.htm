<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/ComputerGraphics/PlaneMap.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:06:51 GMT -->
<head>
















  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type"><title>平面地圖</title></head><body>









<h3><a href="../index.html">From
Gossip@Openhome</a></h3>









<h1><a href="index-2.html">Computer Graphics:&nbsp;平面地圖</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 250px; text-align: center; vertical-align: top;"><script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br><br>
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>







      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>







      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>







      <br>






      
      
      
      
      
      
      <center>
      
      
      
      
      
      
       <br>







      </center>







 </td>


      <td style="vertical-align: top; width: 690px; text-align: left;">
      <small>







這邊的平面地圖所指的是地形沒有高低，只有障礙物的地圖，人物在遇到障礙物時將無法前進，問題是如何判斷障礙物？<br>

      <br>


學過資料結構的話，大家應該都知道老鼠走迷宮這個例子，使用陣列，並在當中填入1表示迷宮的牆，0表示可以前進行的格子，而平面地圖也是利用這個方式來製作。<br>

      <br>


並不是由繪圖區域上的障礙物座標來判斷人物是否能前進，而是在一個陣列中判斷，將陣列元素設定為1表示障礙物，如下所示：<br>

      <img style="width: 536px; height: 194px;" alt="" src="images/planeMap-1.jpg"><br>

      <br>


利用兩個變數(i, j)來表示人物於陣列中的位置，當人物上下左右移動前，先判斷下一個位置是否為0，如果是才可以前進（改變i, j的值），否則就停留在原地。 <br>

      <br>


在繪圖時，只要根據陣列將指定的圖片一格格繪製上去就可以了，如下圖所示： <br>

      <img style="width: 528px; height: 189px;" alt="" src="images/planeMap-2.jpg"><br>

      <br>

      <br>










當然障礙物並不一定只有一種，您也可以用其它的元素值表示不同的障礙物，例如2表示樹木、3表示水池等等；如果地圖較大，可以只繪製指定範圍的圖形，這並不難，指定陣列中的起始與終止範圍就可以了，如下圖所示： <br>

      <img style="width: 536px; height: 193px;" alt="" src="images/planeMap-3.jpg"><br>

      <br>


這個平面地圖的製作方式，可以使用於俯視、斜角地圖，下面這個程式是個實作的例子，您可以先看看 <a href="applet/Maze1.html">效果</a> 程式中使用了事件處理，程式碼長了一些，有興趣的就耐心看完吧！ </small>























      <br>


      
      <ul>

        <li> Maze1.java
  </li>

      
      </ul>



      
      <pre>package cc.openhome;<br><br>import java.awt.*;<br>import java.awt.event.*;<br>import javax.swing.JApplet;<br><br>public class Maze1 extends JApplet implements KeyListener {<br>    private int[][] maze = {<br>        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},<br>        {0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 2, 2},<br>        {2, 0, 1, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 2, 2},<br>        {2, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 0, 1, 0, 0, 0, 0, 2},<br>        {2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 2},<br>        {2, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 2},<br>        {2, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2, 0, 2, 2},<br>        {2, 1, 0, 0, 2, 0, 1, 1, 1, 2, 0, 1, 0, 0, 2, 0, 1, 2},<br>        {2, 1, 1, 1, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 2},<br>        {2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 2, 1, 0, 2},<br>        {2, 0, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2},<br>        {2, 1, 2, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 2},<br>        {2, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},<br>        {2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}};<br><br>    private int blockWidth, blockHeight;<br>    private Image character, floor, block1, block2;<br>    private Image backGround, offScreen;<br>    private Graphics gOffScreen;<br>    private Sprite sprite;<br>    private int characterStartX, characterStartY;<br>    private int characterWidth, characterHeight;<br><br>    public void init() {<br>        addKeyListener(this);<br>        setBackground(Color.white);<br><br>        //取得影像<br>        MediaTracker mediaTracker = new MediaTracker(this);<br>        character = getImage(getDocumentBase(), "character.gif");<br>        floor = getImage(getDocumentBase(), "floor.jpg");<br>        block1 = getImage(getDocumentBase(), "block1.gif");<br>        block2 = getImage(getDocumentBase(), "block2.gif");<br>        mediaTracker.addImage(character, 0);<br>        mediaTracker.addImage(floor, 0);<br>        mediaTracker.addImage(block1, 0);<br>        mediaTracker.addImage(block2, 0);<br><br>        try {<br>            showStatus("影像載入中(Loading Images)...");<br>            mediaTracker.waitForAll();<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        }<br><br>        sprite = new Sprite(0, 1, maze);<br><br>        blockWidth = getWidth() / maze[0].length;<br>        blockHeight = getHeight() / maze.length;<br>        characterWidth = character.getWidth(this) / 3;<br>        characterHeight = character.getHeight(this) / 4;<br>        characterStartY = characterHeight;<br><br>        //建立次畫面<br>        offScreen = createImage(getWidth(), getHeight());<br>        gOffScreen = offScreen.getGraphics();<br><br>        // 建立地圖<br>        backGround = createImage(getWidth(), getHeight());<br>        Graphics g = backGround.getGraphics();<br>        // 繪地版<br>        for (int i = 0; i &lt; maze.length; i++) {<br>            for (int j = 0; j &lt; maze[0].length; j++) {<br>                g.drawImage(floor, j * blockWidth, i * blockHeight, <br>                            blockWidth, blockHeight, this);<br>            }<br>        }<br>        // 繪障礙物<br>        for (int i = 0; i &lt; maze.length; i++) {<br>            for (int j = 0; j &lt; maze[0].length; j++) {<br>                switch (maze[i][j]) {<br>                    case 1:<br>                        g.drawImage(block1, j * blockWidth, i * blockHeight,<br>                                blockWidth, blockHeight, this);<br>                        break;<br>                    case 2:<br>                        g.drawImage(block2, j * blockWidth, i * blockHeight,<br>                                blockWidth, blockHeight, this);<br>                        break;<br>                    default:<br>                        g.drawImage(floor, j * blockWidth, i * blockHeight,<br>                                    blockWidth, blockHeight, this);<br>                }<br>            }<br>        }<br>    }<br><br>    public void paint(Graphics g) {<br>        // 在背後繪地圖<br>        gOffScreen.drawImage(backGround, 0, 0, this);<br>        // 貼人物<br>        gOffScreen.drawImage(character,<br>                sprite.getX() * blockWidth,<br>                sprite.getY() * blockHeight,<br>                (sprite.getX() + 1) * blockWidth,<br>                (sprite.getY() + 1) * blockHeight,<br>                characterStartX, characterStartY,<br>                characterStartX + characterWidth,<br>                characterStartY + characterHeight,<br>                this);<br><br>        //將次畫面貼到主畫面中<br>        g.drawImage(offScreen, 0, 0, this);<br>    }<br><br>    public void update(Graphics g) {<br>        paint(g);<br>    }<br><br>    //=====實作KeyListener介面 =====<br>    public void keyPressed(KeyEvent e) {<br>        characterStartX = characterStartX + characterWidth;<br>        switch (e.getKeyCode()) {<br>            case KeyEvent.VK_RIGHT:<br>                sprite.moveRight();<br>                characterStartY = characterHeight;<br>                break;<br>            case KeyEvent.VK_LEFT:<br>                sprite.moveLeft();<br>                characterStartY = characterHeight * 3;<br>                break;<br>            case KeyEvent.VK_UP:<br>                sprite.moveUp();<br>                characterStartY = 0;<br>                break;<br>            case KeyEvent.VK_DOWN:<br>                sprite.moveDown();<br>                characterStartY = characterHeight * 2;<br>                break;<br>        }<br><br>        if (characterStartX &gt;= character.getWidth(null)) {<br>            characterStartX = 0;<br>        }<br><br>        repaint();<br>    }<br><br>    public void keyTyped(KeyEvent e) {}<br>    public void keyReleased(KeyEvent e) {}<br>}<br><br>class Sprite {<br>    private int i, j;<br>    private int maze[][];<br>    Sprite(int x, int y, int[][] maze) {<br>        this.i = y;<br>        this.j = x;<br>        this.maze = maze;<br>    }<br><br>    void moveUp() {<br>        if (isMovable(i - 1, j)) {<br>            i--;<br>        }<br>    }<br><br>    void moveDown() {<br>        if (isMovable(i + 1, j)) {<br>            i++;<br>        }<br>    }<br><br>    void moveRight() {<br>        if (isMovable(i, j + 1)) {<br>            j++;<br>        }<br>    }<br><br>    void moveLeft() {<br>        if (isMovable(i, j - 1)) {<br>            j--;<br>        }<br>    }<br><br>    private boolean isMovable(int i, int j) {<br>        if (i &lt; 0 || j &lt; 0 ||<br>                j &gt;= maze[0].length || i &gt;= maze.length) {<br>            return false;<br>        }<br>        if (maze[i][j] == 0) {<br>            return true;<br>        }<br>        return false;<br>    }<br><br>    int getX() { return j; }<br>    int getY() { return i; }<br>}<br></pre><br><small>以下是使用HTML5 Canvas的方式（如果瀏覽器支援HTML5 Canvas，例如最新版的Firexfox、Chrome、IE9等，可以直接將下面的內容存為HTML或按下檔名連結，直接載入瀏覽器執行觀看結果：</small><small><br>
      </small>
      <ul>
        <li><small><a href="html/PlaneMap-1.html">PlaneMap-1.html</a></small></li>
      </ul>
      <pre>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;meta content="text/html; charset=Big5" http-equiv="content-type"&gt;<br>        &lt;script type="text/javascript"&gt;<br>            window.onload = function() {<br>                function Sprite(x, y, maze) {<br>                    var i = y;<br>                    var j = x;<br>                    <br>                    function isMovable(i, j) {<br>                        if (i &lt; 0 || j &lt; 0 ||<br>                            j &gt;= maze[0].length || i &gt;= maze.length) {<br>                            return false;<br>                        }<br><br>                        if (maze[i][j] === 0) {<br>                            return true;<br>                        }<br>                        <br>                        return false;<br>                    }<br>                    <br>                    this.moveUp = function() {<br>                        if(isMovable(i - 1, j)) {<br>                            i--;<br>                        }<br>                    };<br>                    <br>                    this.moveDown = function() {<br>                        if(isMovable(i + 1, j)) {<br>                            i++;<br>                        }<br>                    };<br>                    <br>                    this.moveRight = function() {<br>                        if(isMovable(i, j + 1)) {<br>                            j++;<br>                        }<br>                    };<br>                    <br>                    this.moveLeft = function() {<br>                        if(isMovable(i, j - 1)) {<br>                            j--;<br>                        }<br>                    };<br>                    <br>                    this.getX = function() {<br>                        return j;<br>                    };<br>                    <br>                    this.getY = function() {<br>                        return i;<br>                    };<br>                }<br>                <br>                var maze = [<br>        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],<br>        [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 2, 2],<br>        [2, 0, 1, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 2, 2],<br>        [2, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 0, 1, 0, 0, 0, 0, 2],<br>        [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 2],<br>        [2, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 2],<br>        [2, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2, 0, 2, 2],<br>        [2, 1, 0, 0, 2, 0, 1, 1, 1, 2, 0, 1, 0, 0, 2, 0, 1, 2],<br>        [2, 1, 1, 1, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 2],<br>        [2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 2, 1, 0, 2],<br>        [2, 0, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2],<br>        [2, 1, 2, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 2],<br>        [2, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],<br>        [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];<br>            <br>                var sprite = new Sprite(0, 1, maze);<br>                <br>                var character = document.getElementById('character');<br>                var floor = document.getElementById('floor');<br>                var block1 = document.getElementById('block1');<br>                var block2 = document.getElementById('block2');<br>                document.body.removeChild(character);<br>                document.body.removeChild(floor);<br>                document.body.removeChild(block1);<br>                document.body.removeChild(block2);<br>                <br>                var canvas1 = document.getElementById('canvas1');<br>                var canvas2 = document.getElementById('canvas2');<br>                var context1 = canvas1.getContext('2d');<br>                var context2 = canvas2.getContext('2d');<br>                <br>                document.body.removeChild(canvas2);<br>                <br>                var blockWidth = canvas1.width / maze[0].length;<br>                var blockHeight = canvas1.height / maze.length;<br>                var characterWidth = 108 / 3;  // 人物圖片寬<br>                var characterHeight = 186 / 4; // 人物圖片高<br>                var characterStartX = 0;<br>                var characterStartY = characterHeight;<br>                <br>                var context = context1;<br>                <br>                // 繪地版<br>                function drawFloor() {<br>                    for(var i = 0; i &lt; maze.length; i++) {<br>                        for(var j = 0; j &lt; maze[0].length; j++) {<br>                            context.drawImage(<br>                             floor, j * blockWidth, i * blockHeight, <br>                             blockWidth, blockHeight);<br>                        }<br>                    }<br>                }<br>                <br>                // 繪障礙物<br>                function drawBlock() {<br>                    for(var i = 0; i &lt; maze.length; i++) {<br>                        for(var j = 0; j &lt; maze[0].length; j++) {<br>                            switch (maze[i][j]) {<br>                                case 1:<br>                                    context.drawImage(<br>                                     block1, j * blockWidth, i * blockHeight,<br>                                     blockWidth, blockHeight);<br>                                    break;<br>                                case 2:<br>                                    context.drawImage(<br>                                     block2, j * blockWidth, i * blockHeight,<br>                                     blockWidth, blockHeight);<br>                                    break;<br>                                default:<br>                                     context.drawImage(<br>                                      floor, j * blockWidth, i * blockHeight,<br>                                      blockWidth, blockHeight);<br>                            }<br>                        }<br>                    }                <br>                }<br>      <br>                // 繪人物<br>                function drawCharacter() {<br>                    context.drawImage(character, <br>                            characterStartX, <br>                            characterStartY,<br>                            characterWidth,<br>                            characterHeight,<br>                            sprite.getX() * blockWidth,<br>                            sprite.getY() * blockHeight,<br>                            blockWidth,<br>                            blockHeight);<br>                }<br>                <br>                drawFloor();<br>                drawBlock();<br>                drawCharacter();<br>                <br>                context = context2;<br>                drawFloor();<br>                drawBlock();<br>                <br>                document.onkeydown = function(event) {<br>                    characterStartX = characterStartX + characterWidth;<br>                    switch (event.which) {<br>                        case 39: // 右<br>                            sprite.moveRight();<br>                            characterStartY = characterHeight;<br>                            break;<br>                        case 37: // 左    <br>                            sprite.moveLeft();<br>                            characterStartY = characterHeight * 3;<br>                            break;<br>                       case 38: // 上<br>                            sprite.moveUp();<br>                            characterStartY = 0;<br>                            break;<br>                       case 40: // 下<br>                            sprite.moveDown();<br>                            characterStartY = characterHeight * 2;<br>                            break;<br>                    }<br><br>                    if (characterStartX &gt;= character.width) {<br>                        characterStartX = 0;<br>                    }<br>                    <br>                    drawCharacter();<br>                    <br>                    if(context === context2) {<br>                        document.body.replaceChild(canvas2, canvas1);<br>                        context = context1;<br>                    }<br>                    else {<br>                        document.body.replaceChild(canvas1, canvas2);<br>                        context = context2;<br>                    }<br>                    <br>                    context.clearRect(0, 0, canvas1.width, canvas1.height);<br>                    drawFloor();<br>                    drawBlock();<br>                };<br>            };<br>        &lt;/script&gt;<br>    &lt;/head&gt;<br>    &lt;body&gt;       <br>        &lt;canvas id="canvas1" width="900" height="600"&gt;&lt;/canvas&gt;<br>        &lt;canvas id="canvas2" width="900" height="600"&gt;&lt;/canvas&gt;<br>        &lt;img id="character" src="images/character.gif" <br>                            style="visibility: hidden"/&gt;<br>        &lt;img id="floor" src="images/floor.jpg" <br>                            style="visibility: hidden"/&gt;<br>        &lt;img id="block1" src="images/block1.gif" <br>                            style="visibility: hidden"/&gt;<br>        &lt;img id="block2" src="images/block2.gif" <br>                            style="visibility: hidden"/&gt;<br>    &lt;/body&gt;<br>&lt;/html&gt;<br></pre>
      <small><br>
      </small><br>


      </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>


<br>









<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/ComputerGraphics/PlaneMap.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:06:54 GMT -->
</html>