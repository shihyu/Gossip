<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/AlgorithmGossip/FourNArray.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:05:11 GMT -->
<head>









  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">







  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">







  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type"><title>4N 魔方陣</title></head><body>







<h3><a href="../index.html">From
Gossip@Openhome</a></h3>







<h1><a href="index-2.html">Algorithm Gossip: 4N 魔方陣</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> 
      
      <h2>說明</h2>

      <small>

與 <a href="OddArray.htm">奇數魔術方陣</a> 相同，在於求各行、各列與各對角線的和相等，而這次方陣的維度是4的倍數。</small><br>



      
      <h2>解法</h2>

      <small>

先來看看4X4方陣的解法： <br>

      </small>


      
      <div style="text-align: center;"><small><img style="width: 423px; height: 117px;" alt="4N 魔方陣" title="4N 魔方陣" src="images/fourNArray-1.jpg"><br>

      <br>

      </small>



      
      <div style="text-align: left;"><small>簡單的說，就是一個從左上由1依序開始填，但遇對角線不填，另一個由左上由16開始填，但只填在對角線，再將兩個合起來就是解答了；如果N大於2，則以 4X4為單位畫對角線： <br>

      </small>

      
      <div style="text-align: center;"><small><img style="width: 528px; height: 232px;" alt="4N 魔方陣" title="4N 魔方陣" src="images/fourNArray-2.jpg"></small></div>



      <small><br>



至於對角線的位置該如何判斷，有兩個公式，有興趣的可以畫圖印證看看，如下所示：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">左上至右下：j % 4 == i % 4</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">

      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">右上至左下：(j % 4 + i) % 4 == 1 </span></small>

      <br>



      </div>



      <br>



      
      <h2> 實作：<a href="#C">C</a>&nbsp;&nbsp; &nbsp;<a href="#Java">Java</a>&nbsp;&nbsp; &nbsp;<a href="#Python">Python</a>&nbsp;&nbsp; &nbsp;<a href="#Scala">Scala&nbsp;</a>&nbsp;&nbsp; <a href="#Scala"><a href="#Ruby">Ruby</a><br>
      </a></h2>




      
      <ul>

        <li><a name="C"></a> C
  </li>

      
      </ul>




      
      <pre>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br><br>#define N 8 <br><br>int main(void) { <br>    int square[N+1][N+1] = {0}; <br><br>    int i, j; <br>    for(j = 1; j &lt;= N; j++) { <br>        for(i = 1; i &lt;= N; i++){ <br>            if(j % 4 == i % 4 || (j % 4 + i) % 4 == 1) <br>                square[i][j] = (N+1-i) * N -j + 1; <br>            else <br>                square[i][j] = (i - 1) * N + j; <br>        } <br>    } <br><br>    for(i = 1; i &lt;= N; i++) { <br>        for(j = 1; j &lt;= N; j++) <br>            printf("%2d ", square[i][j]); <br>        printf("\n"); <br>    } <br><br>    return 0; <br>} <br></pre>




      <br>




      
      <ul>

        <li><a name="Java"></a> Java
  </li>

      
      </ul>




      
      <pre>public class Matrix {<br>    public static int[][] magic(int n) {<br>        int[][] square = new int[n+1][n+1]; <br><br>        for(int j = 1; j &lt;= n; j++) { <br>            for(int i = 1; i &lt;= n; i++){ <br>                if(j % 4 == i % 4 || (j % 4 + i) % 4 == 1) <br>                    square[i][j] = (n+1-i) * n -j + 1; <br>                else <br>                    square[i][j] = (i - 1) * n + j; <br>            } <br>        } <br>        <br>        int[][] matrix = new int[n][n];<br>        <br>        for(int k = 0; k &lt; matrix.length; k++) {<br>           for(int l = 0; l &lt; matrix[0].length; l++) {<br>               matrix[k][l] = square[k+1][l+1];<br>           }<br>        }<br>        <br>        return matrix;<br>    }<br>   <br>    public static void main(String[] args) {<br>        for(int[] row : Matrix.magic(8)) {<br>            for(int number: row) {<br>                System.out.printf("%2d ", number);<br>            }<br>            System.out.println();<br>         }<br>    }<br>}<br></pre><br><ul><li><a name="Python"></a>Python</li></ul><pre>def magic(n):<br>    square = []<br>    for i in range(n + 1):<br>        square.append([0] * (n + 1))<br>    for j in range(1, n + 1):<br>        for i in range(1, n + 1):<br>            if j % 4 == i % 4 or (j % 4 + i) % 4 == 1:<br>                square[i][j] = (n + 1 - i) * n - j + 1<br>            else:<br>                square[i][j] = (i - 1) * n + j<br>    matrix = []<br>    for i in range(n):<br>        matrix.append([0] * n)<br>    for k in range(len(matrix)):<br>        for l in range(len(matrix[0])):<br>            matrix[k][l] = square[k + 1][l + 1]<br>    return matrix<br><br>matrix = magic(8)<br>print(matrix)</pre><br><ul><li><a name="Scala"></a>Scala</li></ul><pre>object Matrix {<br>    def magic(n: Int) = {<br>        val square = new Array[Array[Int]](n + 1, n + 1)<br><br>        for(j &lt;- 1 to n; i &lt;- 1 to n) {<br>            square(i)(j) = if(j % 4 == i % 4 || (j % 4 + i) % 4 == 1)<br>                               (n+1-i) * n -j + 1<br>                           else <br>                               (i - 1) * n + j<br>        }<br>        <br>        val matrix = new Array[Array[Int]](n, n)<br>        for(k &lt;- 0 until matrix.length; l &lt;- 0 until matrix(0).length) {<br>            matrix(k)(l) = square(k + 1)(l + 1)<br>        }<br>        matrix<br>    }<br>}<br><br>Matrix.magic(8).foreach(row =&gt; {<br>    row.foreach(number =&gt; printf("%2d ", number))<br>    println()<br>})</pre><br>
      <ul>
        <li><a name="Ruby"></a>Ruby</li>
      </ul>
      <pre>def magic(n)<br>    square = Array.new(n + 1) {<br>        Array.new(n + 1, 0)<br>    }<br>    1.upto(n) { |j|<br>        1.upto(n) { |i|<br>            if j % 4 == i % 4 || (j % 4 + i) % 4 == 1<br>                square[i][j] = (n + 1 - i) * n - j + 1<br>            else<br>                square[i][j] = (i - 1) * n + j<br>            end<br>        }<br>    }<br>    matrix = Array.new(n) {<br>        Array.new(n, 0)<br>    }<br>    matrix.length.times { |k|<br>        matrix[0].length.times { |l|<br>            matrix[k][l] = square[k + 1][l + 1]<br>        }<br>    }<br>    <br>    matrix<br>end<br><br>matrix = magic(8)<br>p matrix<br></pre>
<br>



      </div>







      </div>

 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>





<br>




      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><br>





      <br>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><br>





      <br>




      
      
      
      
      <center>
      
      
      
      
       <br>





      </center>





 </td>


    </tr>


  
  </tbody>
</table>


<br>

<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/AlgorithmGossip/FourNArray.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:05:12 GMT -->
</html>