<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/AlgorithmGossip/GCDPNumber.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:04:52 GMT -->
<head>


















  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">





  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">





  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type"><title>最大公因數、最小公倍數、因數分解</title></head><body>





<h3><a href="../index.html">From
Gossip@Openhome</a></h3>





<h1><a href="index-2.html">Algorithm Gossip: 最大公因數、最小公倍數、因數分解</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> 



      
      <h2>說明</h2><small>可整除兩數的稱之為公因數，</small><small>可使用輾轉相除法來求最大公因數，</small><small>可被兩數整除的某數稱之為公倍數，兩數的最大公因數乘最小公倍數正好等於兩數乘積。因數分解就是求某數的所有因數。<br>
      </small><h2>解法</h2><small>因數分解就是使用小於輸入數的數值當作除數，去除以輸入數值，如果可以整除就視為因數。例如：<br></small><ul><li> C（不用質數表的因數分解）
  </li></ul>



      
      <pre>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br><br>int main(void) {<br>    int n; <br><br>    printf("請輸入整數："); <br>    scanf("%d", &amp;n); <br>    printf("%d = ", n); <br><br>    int i;<br>    for(i = 2; i * i &lt;= n;) if(n % i == 0) { <br>        printf("%d * ", i); <br>        n /= i; <br>    } else { i++; }<br><br>    return 0; <br>} <br></pre>



<br><small>要比較快的解法就是求出小於該數的所有質數，並試試看是不是可以整除，求質數的問題是另一個課題，請參考 <a href="EratosthenesPrime.htm">Eratosthenes 篩選求質數</a>。</small><small> <span style="font-family: Courier New,Courier,monospace;"><span style="font-weight: bold;"><br>
      <br>
      </span></span></small><h2>最大公因數、最小公倍數：<a href="#C1">C</a>&nbsp; <a href="#Java1">Java</a>&nbsp; <a href="#Python1">Python</a>&nbsp; <a href="#Scala1">Scala</a>&nbsp; <a href="#Ruby1">Ruby</a>&nbsp; <a href="#JavaScript1">JavaScript</a>&nbsp; <a href="#Haskell1">Haskell</a><br>
      </h2>



      
      




      
      <h2> 使用質數表因數分解：<a href="#C2">C</a>&nbsp;&nbsp; &nbsp;<a href="#Java2">Java</a>&nbsp;&nbsp; &nbsp;<a href="#Python2">Python</a>&nbsp;&nbsp; &nbsp;<a href="#Scala2">Scala</a>&nbsp;&nbsp;&nbsp; <a href="#Ruby2">Ruby</a>&nbsp;&nbsp;&nbsp; <a href="#JavaScript2">JavaScript</a>&nbsp;&nbsp;&nbsp; <a href="#Haskell2">Haskell</a><br>
      </h2>



      
      <ul>

        <li><a name="C1"></a>C
  </li>

      
      </ul>



      
      <pre>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br><br>int gcd(int m, int n) {<br>    while(n != 0) { <br>        int r = m % n; <br>        m = n; <br>        n = r; <br>    } <br>    return m;<br>}<br><br>int lcm(int m, int n) {<br>    return m * n / gcd(m, n);<br>}<br><br>int main(void) { <br>    int m, n; <br><br>    printf("輸入兩數："); <br>    scanf("%d %d", &amp;m, &amp;n); <br><br>    printf("Gcd：%d\n", gcd(m, n)); <br>    printf("Lcm：%d\n", lcm(m, n)); <br>    <br>    return 0; <br>} <br></pre>



      <br>



      
      <ul>

        <li><a name="Java1"></a> Java<br>
</li>

      
      </ul>



      
      <pre>public class Main {<br>    public static int gcd(int m, int n) {<br>        return n == 0 ? m : gcd(n, m % n);<br>    }<br>    public static int lcm(int m, int n) { return m * n / gcd(m, n);}<br>    public static void main(String[] args) {<br>        System.out.printf("GCD of (10, 4) = %d", gcd(10, 4));<br>        System.out.printf("LCM of (10, 4) = %d", lcm(10, 4));<br>    }<br>}<br></pre><br><ul><li><a name="Python1"></a>Python</li></ul><pre>def gcd(m, n):<br>    return m if n == 0 else gcd(n, m % n)<br><br>def lcm(m, n):<br>    return m * n // gcd(m, n)<br>    <br>m = int(input("輸入 m："))<br>n = int(input("輸入 n："))<br>print("Gcd: ", gcd(m, n))<br>print("Lcm: ", lcm(m, n))<br></pre><br><ul><li><a name="Scala1"></a>Scala</li></ul><pre>def gcd(m: Int, n: Int): Int = if(n == 0) m else gcd(n, m % n)<br>def lcm(m: Int, n: Int) = m * n / gcd(m, n)<br><br>println("Gcd of (10, 4) = %d".format(gcd(10, 4)))<br>println("Lcm of (10, 4) = %d".format(lcm(10, 4)))<br></pre><br>
      <ul>
        <li><a name="Ruby1"></a>Ruby</li>
      </ul>
      <pre># encoding: Big5<br>def gcd(m, n)<br>    if n == 0; m else gcd(n, m % n) end<br>end<br><br>def lcm(m, n)<br>    m * n / gcd(m, n)<br>end<br>    <br>print "輸入 m："<br>m = gets.to_i<br>print "輸入 n："<br>n = gets.to_i<br><br>print "Gcd: ", gcd(m, n), "\n"<br>print "Lcm: ", lcm(m, n), "\n"<br></pre>
      <br>
      <ul>
        <li><a name="JavaScript1"></a>JavaScript</li>
      </ul>
      <pre>function gcd(m, n) { return n === 0 ? m : gcd(n, m % n); }<br>function lcm(m, n) { return m * n / gcd(m, n); }<br>print('GCD of (10, 4) = ' + gcd(10, 4));<br>print('LCM of (10, 4) = ' + lcm(10, 4));<br></pre>
      <br>
      <ul>
        <li><a name="Haskell1"></a>Haskell</li>
      </ul>
      <pre>gcd' m n = if n == 0 then m else gcd n (m `mod` n)<br>lcm' m n = m * n `div` (gcd m n)<br><br>main = do<br>    putStrLn ("Gcd of (10, 4) = " ++ (show $ gcd' 10 4))<br>    putStrLn ("Lcm of (10, 4) = " ++ (show $ lcm' 10 4))<br></pre>
<br><hr style="width: 100%; height: 2px;"><ul><li><a name="C2"></a>C
  </li>

      
      </ul>



      
      <pre>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br><br>#define N 1000 <br><br>void create(int*);       // 建立質數表<br>void filter(int*, int);<br>void factor(int, int*, int*);  // 因數分解<br><br>int main(void) { <br>    int primes[N + 1] = {0};<br>    create(primes);<br>    <br>    printf("請輸入一數："); <br>    int num;<br>    scanf("%d", &amp;num); <br>    <br>    int factors[N / 2 + 1] = {0};<br>    factor(num, factors, primes); <br>    <br>    int i;<br>    for(i = 0; factors[i] != 0; i++) {<br>        printf("%d ", factors[i]);<br>    }<br>    <br>    return 0; <br>} <br><br>void create(int* primes) {<br>    primes[2] = primes[3] = primes[5] = 1;<br>    <br>    int i;<br>    for(i = 1;6 * i + 5 &lt;= N; i++) {<br>        primes[6 * i + 1] = primes[6 * i + 5] = 1; <br>    }<br>    if(6 * i + 1 &lt;= N) { primes[6 * i + 1] = 1; }<br>    <br>    int n;<br>    for(n = 0;(6 * n + 5) * (6 * n + 5) &lt;= N; n++) {<br>        filter(primes, 6 * n + 1);<br>        filter(primes, 6 * n + 5);<br>    }     <br>    if((6 * n + 1) * (6 * n + 1) &lt;= N) { filter(primes, 6 * n + 1); }  <br>}<br><br>void filter(int* primes, int i) {<br>    if(primes[i]) { <br>        int j;<br>        for(j = 2; j * i &lt;= N; j++) {<br>            primes[j * i] = 0; <br>        }<br>    }<br>}<br><br>void factor(int num, int* factors, int* primes) { <br>    int i, j;<br>    for(i = 2, j = 0; i * i &lt;= num;) if(primes[i] &amp;&amp; num % i == 0) {<br>        factors[j++] = i;<br>        num /= i;<br>    } else { i++; }<br>    factors[j] = num;<br>}<br></pre>



      <br>



      
      <ul>

        <li><a name="Java2"></a> Java
  </li>

      
      </ul>



      
      <pre>// 使用 <a href="EratosthenesPrime.htm">Eratosthenes 篩選求質數</a> 中的 Prime <br><br>import java.util.*;<br><br>public class Factor {<br>    public static List&lt;Integer&gt; factor(int n) {<br>        List&lt;Integer&gt; primes = Prime.create(n / 2);<br>        return factor(n, primes);<br>    }<br>    <br>    public static List&lt;Integer&gt; factor(int n, List&lt;Integer&gt; primes) {<br>        List&lt;Integer&gt; factors = new ArrayList&lt;&gt;();<br>        for(int i = 0; primes.get(i) &lt;= Math.sqrt(n);) { <br>            if(n % primes.get(i) == 0) { <br>                factors.add(primes.get(i));<br>                n /= primes.get(i); <br>            } else { i++; }<br>        } <br>        factors.add(n);      <br>        return factors;<br>    }<br><br>    public static void main(String[] args) {<br>        for(Integer f : factor(100)) {<br>            System.out.printf("%d ", f);<br>        }<br>    }<br>}<br></pre><br><ul><li><a name="Python2"></a>Python</li></ul><pre># 使用 <a href="EratosthenesPrime.htm">Eratosthenes 篩選求質數</a> 中的 create<br><br>def factor(n):<br>    def ft(ps, num):<br>        if ps[0] ** 2 &gt; num:<br>            return [num]<br>        else:<br>            return (ps[0:1] + ft(ps, num // ps[0]) <br>                    if num % ps[0] == 0 else ft(ps[1:], num))<br>                    <br>    return ft(create(n // 2), n)<br>    <br>print(factor(100))<br></pre><br><ul><li><a name="Scala2"></a>Scala</li></ul><pre>// 使用 <a href="EratosthenesPrime.htm">Eratosthenes 篩選求質數</a> 中的 create<br><br>def factor(n: Int) = {<br>    def ft(ps: List[Int], num: Int): List[Int] = {<br>        if(math.pow(ps.head, 2) &gt; num) List(num)<br>        else if(num % ps.head == 0) ps.head :: ft(ps, num / ps.head)<br>             else ft(ps.tail, num)<br>    }<br>    ft(create(n / 2), n)<br>}<br>    <br>print(factor(100))<br></pre><br>
      <ul>
        <li><a name="Ruby2"></a>Ruby<br>
</li>
      </ul>
      <pre># 使用 <a href="EratosthenesPrime.htm">Eratosthenes 篩選求質數</a> 中的 create<br><br>def factor(n)<br>    ft = -&gt;(ps, num) {<br>        if ps[0] ** 2 &gt; num<br>            [num]<br>        else<br>            if num % ps[0] == 0<br>                ps[0,1] + ft.call(ps, num / ps[0])<br>            else<br>                ft.call(ps[1, ps.size], num)<br>            end<br>        end<br>    }<br>    ft.call(create(n / 2), n)<br>end<br>    <br>print(factor(100))<br></pre>
      <br>
      <ul>
        <li><a name="JavaScript2"></a>JavaScript</li>
      </ul>
      <pre>// 使用 <a href="EratosthenesPrime.htm">Eratosthenes 篩選求質數</a> 中的 create<br><br>function factor(n) {<br>    var primes = create(parseInt(n / 2));<br>    var factors = [];<br>    for(var i = 0; primes[i] &lt;= Math.sqrt(n);) { <br>        if(n % primes[i] === 0) { <br>            factors.push(primes[i]);<br>            n /= primes[i]; <br>        } else { i++; }<br>    } <br>    factors.push(n);<br>    return factors;<br>}<br><br>print(factor(100));<br></pre>
      <br>
      <ul>
        <li><a name="Haskell2"></a>Haskell</li>
      </ul>
      <pre>{- 使用 <a href="EratosthenesPrime.htm">Eratosthenes 篩選求質數</a> 中的 create -}<br><br>factor n = ft (create (n `div` 2)) n<br>    where ft ps num =<br>              if (head ps) ^ 2 &gt; num then [num]<br>              else if num `mod` (head ps) == 0 then <br>                       (head ps) : ft ps (num `div` (head ps))<br>                   else ft (tail ps) num<br><br>main = print $ factor 100<br></pre>
<br>


 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>





      <br>





      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><br>





      <br>

 
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><br>





      <br>


      
      
      
      
      <center>
      
      
      
      
       <br>





      </center>





 </td>


    </tr>


  
  </tbody>
</table>

<br>





<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/AlgorithmGossip/GCDPNumber.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:04:52 GMT -->
</html>