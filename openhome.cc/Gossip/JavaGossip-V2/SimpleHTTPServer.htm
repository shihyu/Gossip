<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/SimpleHTTPServer.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:22 GMT -->
<head>













  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">













  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">













  
  
  
  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">












  
  
  
  
  
  
  
  
  
  
  
  
  <title>簡單 HTTP 伺服器</title>
</head>


<body>













<h3><a href="../index.html">From
Gossip@Openhome</a></h3>













<h1><a href="index-2.html">Java Gossip: 簡單 HTTP 伺服器</a></h1>













<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">













  <tbody>













    <tr>













      <td style="width: 676px; vertical-align: top;"> <small>這個程式改寫自O'reilly的Java網路程式設計書中的jhttp.java程式，我將啟動的介面作了一些改變，並服務客戶端的執行緒部份獨立出來，使這個程式的服務類別更具一般性，不受限制於伺服器介面的管理方式。 <br>


      <br>


這個程式可以判別客戶端請求的資源型態，並傳回適當的標頭，因為這是一個最簡單的HTTP伺服器，它不處理客戶端的標頭，並只接受基本的GET方法。 <br>


      <br>


基本上這個程式一點都不難，執行緒與Socket的使用都很基本，只要您稍微懂得HTTP協定，都可以看得懂這個程式，有興趣的可以參照HTTP協定繼續完成功能更豐富的HTTP伺服器。 <br>


      <br>


以下為程式碼內容： <br>


      </small>
      
      
      <ul>


        <li><small>HttpClient.java</small></li>


      
      
      </ul>


      
      
      <pre>package onlyfun.caterpillar;<br><br>import java.io.*;<br>import java.net.*;<br>import java.util.Date;<br><br>class HttpClient implements Runnable { <br>    private Socket clientSkt; <br>    private File docRoot; <br>    private String defaultFile;; <br><br>    public HttpClient(Socket s, String root, String indexFile) { <br>        clientSkt = s; <br>        docRoot = new File(root); <br>        defaultFile = indexFile; <br>    } <br><br>    // 根據要求的檔名判斷傳回型態 <br>    public String returnContentType(String fileName) { <br>        if(fileName.endsWith(".html") || fileName.endsWith(".htm")) <br>            return "text/html";   // HTML網頁 <br>        else if(fileName.endsWith(".txt") || fileName.endsWith(".java")) <br>            return "text/plain";  // 文字型態 <br>        else if(fileName.endsWith(".gif")) <br>            return "image/gif";   // GIF圖檔 <br>        else if(fileName.endsWith(".jpg") || fileName.endsWith(".jpeg")) <br>            return "image/jpeg";  // JPEG圖檔 <br>        else if(fileName.endsWith(".class")) <br>            return "application/octec-stream"; // 二進位應用?{式檔案 <br>        else // 其它不可判別的檔案一律視為文字檔型態 <br>            return "text/plain"; <br>    } <br><br>    public void run() { <br>        String request;           // 要求的方法 <br>        String contentType;       // 檔案型態 <br>        String httpVersion = "";  // HTTP協定版本 <br>        File requestedFile;       // 要求的檔案 <br><br>        try { <br>            PrintStream printStream = new PrintStream(<br>                               clientSkt.getOutputStream()); <br>            BufferedReader clientReader = new BufferedReader( <br>                new InputStreamReader(clientSkt.getInputStream())); <br><br>            String get = clientReader.readLine(); <br>        <br>            // 分離Request的內容 <br>            String[] tokens = get.split("[ \t]"); <br>            request = tokens[0]; <br><br>            if(request.equals("GET")) { <br>                String file = tokens[1]; <br><br>                if(file.endsWith("/")) // GET / <br>                    file += defaultFile; <br>                contentType = returnContentType(file); <br><br>                if(tokens.length &gt;= 3) { <br>                    httpVersion = tokens[2]; <br>                } <br><br>                // 我們不處理客戶端的標頭 <br>                while((get = clientReader.readLine()) != null) { <br>                    if(get.trim().equals("")) <br>                        break; <br>                } <br><br>                try { <br>                    requestedFile = new File( <br>                         docRoot, file.substring(1, file.length())); <br>                    FileInputStream fileInputStream = <br>                        new FileInputStream(requestedFile); <br><br>                    // 讀入請求的檔案 <br>                    int fileLength = (int)requestedFile.length(); <br>                    byte[] requestedData = new byte[fileLength]; <br>                    fileInputStream.read(requestedData); <br>                    fileInputStream.close(); <br><br>                    // 寫出標頭至客戶端 <br>                    if(httpVersion.startsWith("HTTP/")) { <br>                        printStream.print("HTTP/1.0 200 OK\r\n"); <br>                        Date now = new Date(); <br>                        printStream.print("Date: " + now + "\r\n"); <br>                        printStream.print("Server: TinyHttpd v0.1\r\n"); <br>                        printStream.print(<br>                                "Content-length: " + fileLength + "\r\n"); <br>                        printStream.print(<br>                                "Content-type: " + contentType + "\r\n\r\n"); <br>                    } <br><br>                    // 將檔案傳給客戶端 <br>                    printStream.write(requestedData); <br>                    printStream.close(); <br>                } <br>                catch(IOException e) {  // 找不到檔案 <br>                    if(httpVersion.startsWith("HTTP/")) { <br>                        printStream.print("HTTP/1.0 404 File Not Found\r\n"); <br>                        Date now = new Date(); <br>                        printStream.print("Date: " + now + "\r\n"); <br>                        printStream.print("Server: TinyHttpd v0.1\r\n"); <br>                        printStream.print("Content-type: text/html\r\n\r\n"); <br>                    } <br>                } <br><br>                // 顯示錯誤訊息網頁 <br>                printStream.println(<br>                        "&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;File Not Found&lt;/TITLE&gt;&lt;/HEAD&gt;" <br>                           + "&lt;BODY&gt;&lt;H1&gt;HTTP Error 404: File Not Found" + <br>                             "&lt;/H1&gt;&lt;/BODY&gt;&lt;/HTML&gt;"); <br>                printStream.close(); <br>            } <br>            else { // 客戶端請求了一個沒有實作的方法，例如POST等 <br>                if(httpVersion.startsWith("HTTP/")) { <br>                    printStream.print("HTTP/1.0 501 Not Implemented\r\n"); <br>                    Date now = new Date(); <br>                    printStream.print("Date: " + now + "\r\n"); <br>                    printStream.print("Server: TinyHttpd v1.0\r\n"); <br>                    printStream.print("Content-type: text/html\r\n\r\n"); <br>                } <br>            } <br>            printStream.println(<br>                    "&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;Not Implemented&lt;/TITLE&gt;&lt;/HEAD&gt;" <br>                           + "&lt;BODY&gt;&lt;H1&gt;HTTP Error 501: Not Implemented" + <br>                             "&lt;/H1&gt;&lt;/BODY&gt;&lt;/HTML&gt;"); <br>            printStream.close(); <br>        } <br>        catch(IOException e) { <br>            e.printStackTrace(); <br>        } <br><br>        try { <br>            clientSkt.close(); <br>        } <br>        catch(IOException e) { <br>            e.printStackTrace(); <br>        } <br>    } <br>}</pre>


      <br>


      
      
      <ul>


        <li><small>SimpleHttpServer.java</small></li>


      
      
      </ul>


      
      
      <pre>package onlyfun.caterpillar;<br><br>import java.io.*;<br>import java.net.*;<br><br>public class SimpleHttpServer {<br>    public static void main(String args[]) { <br>        String docRoot; <br>        String indexFile; <br>        int port; <br><br>        ServerSocket serverSkt; <br>        Socket clientSkt; <br><br>        try { <br>            BufferedReader buf = new <br>                 BufferedReader(new InputStreamReader(System.in)); <br>            System.out.println("TinyHttpd v0.1"); <br>            System.out.print("伺服器文件根目錄: "); <br>            docRoot = buf.readLine(); <br>            System.out.print("索引文件: "); <br>            indexFile = buf.readLine(); <br>            System.out.print("伺服器連接埠: "); <br>            port = Integer.parseInt(buf.readLine()); <br><br>            if(port &lt; 0 || port &gt; 65535) {<br>                port = 80; <br>            }<br>        } <br>        catch(Exception e) { <br>            System.err.println("錯誤: " + e.toString()); <br>            System.out.print("採用內定選項"); <br>            docRoot = "/var/www/html/"; <br>            indexFile = "index.html"; <br>            port = 80; <br>            System.out.println("文件根目錄: " + docRoot + <br>                               "\n索引文件: " + indexFile + <br>                               "\n連接埠: " + port); <br>        } <br><br>        try { <br>            serverSkt = new ServerSocket(port); <br>            System.out.println("傾聽客戶端於 " + <br>                serverSkt.getLocalPort() + " 連接埠...."); <br><br>            while(true) { <br>                clientSkt = serverSkt.accept(); <br>                System.out.println("客戶端連線: " + clientSkt.getInetAddress()); <br><br>                // 啟動一個客戶端執行緒 <br>                Thread clientThread = new Thread(<br>                        new HttpClient(clientSkt, docRoot, indexFile)); <br>                clientThread.start(); <br>            } <br>        } <br>        catch(IOException e) { <br>            e.printStackTrace(); <br>        } <br>    } <br>}</pre>












      <span class="postbody"><br>


      <br>


      <br>












      </span> </td>













      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>



      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <br>


      
      
      <center>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>



      </center>



 </td>













    </tr>













  
  
  
  
  
  
  
  
  
  
  
  
  </tbody>
</table>













<br>












<span class="postbody"><br>













<br>













</span>
<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/SimpleHTTPServer.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:22 GMT -->
</html>
