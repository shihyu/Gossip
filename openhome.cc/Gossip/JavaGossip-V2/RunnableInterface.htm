<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/RunnableInterface.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
<head>







  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">







  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">







  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">







  
  
  
  
  
  
  
  <title>實作 Runnable 介面</title>
</head>


<body>







<h3><a href="../index.html">From
Gossip@Openhome</a></h3>







<h1><a href="index-2.html">Java Gossip: 實作 Runnable 介面</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>一個進程（Process）是一個包括有自身執行位址的程式，在一個多工的作業系統中，可以分配CPU時間給每一個進程，CPU在片段時間中執行某個進程，然後下一個時間片段跳至另一個進程去執行，由於轉換速度很快，這使得每個程式像是在同時進行處理一般。<br>

      <br>



一個執行緒是進程中的一個執行流程，一個進程中可以同時包括多個執行緒，也就是說一個程式中同時可能進行多個不同的子流程，這使得一個程式可以像是同時間
處理多個事務，例如一方面接受網路上的資料，另一方面同時計算資料並顯示結果，一個多執行緒程式可以同時間處理多個子流程。<br>

      <br>



在Java中要實現執行緒功能，可以<span style="font-weight: bold;">實作Runnable介面</span>，Runnable介面中只定義一個<span style="font-weight: bold;">run()</span>方法，然後<span style="font-weight: bold;">實例化一個 Thread物件時，傳入一個實作Runnable介面的物件</span>作為引數，Thread物件會調用Runnable物件的run()方法，進而執行當中所定義的流程。<br>

      <br>



下面這個程式是個簡單的Swing程式，您可以看到如何實作Runnable介面及如何啟動執行緒：</small>





      <br>



      
      <ul>

        <li>ThreadDemo.java</li>

      
      </ul>







      
      <pre>package onlyfun.caterpillar;<br> <br>import javax.swing.*;<br>import java.awt.BorderLayout;<br>import java.awt.Graphics;<br>import java.awt.event.*;<br> <br>public class ThreadDemo extends JFrame {<br>    public ThreadDemo() {<br>        // 配置按鈕 <br>        JButton btn = new JButton("Click me"); <br>        <br>        // 按下按鈕後繪製圓圈 <br>        btn.addActionListener(new ActionListener() { <br>            public void actionPerformed(ActionEvent e) {<br>                Thread thread1 = new Thread(new Runnable() {<br>                    public void run() {<br>                        Graphics g = getGraphics(); <br><br>                        for(int i = 10; i &lt; 300; i+=10) { <br>                            try { <br>                                Thread.sleep(500); <br>                                g.drawOval(i, 100, 10, 10); <br>                            } <br>                            catch(InterruptedException e) { <br>                                e.printStackTrace(); <br>                            } <br>                        }<br>                    }<br>                });<br>                <br>                Thread thread2 = new Thread(new Runnable() {<br>                    public void run() {<br>                        Graphics g = getGraphics(); <br><br>                        for(int i = 10; i &lt; 300; i+=10) { <br>                            try { <br>                                Thread.sleep(500); <br>                                g.drawOval(i, 150, 15, 15); <br>                            } <br>                            catch(InterruptedException e) { <br>                                e.printStackTrace(); <br>                            } <br>                        }<br>                    }<br>                });<br>                <br>                thread1.start();<br>                thread2.start();<br>            } <br>        }); <br>        <br>        getContentPane().add(btn, BorderLayout.NORTH); <br><br>        // 取消按下視窗關閉鈕預設動作 <br>        setDefaultCloseOperation(<br>                   WindowConstants.EXIT_ON_CLOSE); <br>        setSize(320, 200);<br>        <br>        setVisible(true);<br>    }<br><br>    public static void main(String[] args) {<br>        new ThreadDemo();<br>    }<br>}</pre>



      <br>

      <small>





將程式編譯並執行時，您可以看到一個視窗，按下上面的按鈕，您會看到兩個圓在「同時」繪製，雖說是同時，其實也只是錯覺而已，其實是CPU往來兩個流程之間不斷的進行繪製圓的動作而已。<br>

      <br>


Thread類別也實作了Runnable介面，您也可以繼承Thread類別並重新定義它的run()方法，好處是可以使用Thread上的一些繼承下來的方法，例如yield()，然而繼承了Thread就表示您不能讓您的類別再繼承其它的類別。</small>

 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>



      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <br>


      
      
      <center>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>



      </center>



 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>

<br>


<br>







<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/RunnableInterface.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
</html>
