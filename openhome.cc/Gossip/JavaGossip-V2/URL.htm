<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/URL.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:22 GMT -->
<head>














  
  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">














  
  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">














  
  
  
  
  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">













  
  
  
  
  
  
  
  
  
  
  
  
  
  <title>URL 類別</title>
</head>


<body>














<h3><a href="../index.html">From
Gossip@Openhome</a></h3>














<h1><a href="index-2.html">Java Gossip: URL 類別</a></h1>














<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">














  <tbody>














    <tr>














      <td style="width: 676px; vertical-align: top;"> <small>URL
類別可以提供URL（Uniform Resource Locator）的Protocol、Host、Port、File、named
anchor與URLStreamHandler等資訊，它擁有幾個建構函式，它們皆需處理MalformedURLException： <br>




      </small>
      
      
      
      <div style="margin-left: 40px;"><small style="font-weight: bold; font-family: Courier New,Courier,monospace;">public URL(String url) </small><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <small style="font-weight: bold; font-family: Courier New,Courier,monospace;">public URL(String protocol, String host, String file) </small><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <small style="font-weight: bold; font-family: Courier New,Courier,monospace;">public URL(String protocol, String host, int port, String file) </small><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <small style="font-weight: bold; font-family: Courier New,Courier,monospace;">public URL(URL u,String s)</small><br>



      </div>



      <small>
      </small><br>













      <span class="postbody"><small>URL類別可以由以下幾個方法取得資訊： <br>



      </small></span>
      
      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;" class="postbody">public String getProtocol() </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;" class="postbody">public String getHost() </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;" class="postbody">public int getPort() </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;" class="postbody">public String getFile() </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;" class="postbody">public String getRef()</span></small><br>



      <span class="postbody"></span></div>



      <span class="postbody"><br>



      <small>其中getFile()會包括從主機名稱後至檔案名稱的字串，包括/，而getRef()則是取回參考點名稱，中文俗稱網頁中的「書籤」，下面這個程式示範這幾個方法的作用： <br>



      </small></span>
      
      
      
      <ul>



        <li><small>UrlInfo.java</small></li>



      
      
      
      </ul>



      <span class="postbody"></span>
      
      
      
      <pre>package onlyfun.caterpillar;<br><br>import java.net.*;<br><br>public class UrlInfo {<br>    public static void main(String[] args) { <br>        try { <br>            URL url = new URL(args[0]); <br>            System.out.printf("URL: %s%n", url); <br>            System.out.printf("Protocal: %s%n", url.getProtocol()); <br>            System.out.printf("Host: %s%n", url.getHost()); <br>            System.out.printf("Port: %d%n", url.getPort()); <br>            System.out.printf("File: %s%n", url.getFile()); <br>            System.out.printf("REF: %s%n", url.getRef()); <br>        } <br>        catch(MalformedURLException e) { <br>            e.printStackTrace();<br>        } <br>    } <br>}</pre>



      <span class="postbody"><br>



      </span><small>當執行程式時給定的引數為http://openhome.cc:8080/admin/setup.html#justin，執行結果如下： </small><br>













      
      
      
      
      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">













  <tbody>













    <tr>













      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">URL: http://openhome.cc:8080/admin/setup.html#justin<br>



Protocal: http<br>



Host: openhome.cc<br>



Port: 8080<br>



File: /admin/setup.html<br>



REF: justin<br>



            </span></small><span style="color: rgb(255, 255, 255);"></span></td>













    </tr>













  
  
  
  
  
  
  
  
        
        
        
        
        
        </tbody>
      
      
      
      
      
      </table>












      <br>



      <small>URL類別有三個方法可以取得指定的URL資料，這三個方法必須處理IOException： </small><br>



      
      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">public final InputStream openStream() </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">public URLConnection openConnection() </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">public final Object getContent()</span></small><br>



      </div>



      <span class="postbody"><br>



      <small>在這邊先示範openStream()，它會自動處理連線之間的協定動作，並傳回一個InputStream物件，所以可以將它塞入BufferedReader或BufferedInputStream等I/O類別，再透過它來讀取伺服器傳來的資料。 <br>



      <br>



下面這個程式即利用openStream()取得指定網址的資料，並自動將資料儲存在對應檔案名稱之中，由於是使用BufferedInputStream，您可以用它來儲存HTML網頁，也可以儲存圖片：<br>



      </small></span>
      
      
      <ul>


        <li><span class="postbody"><small>UrlInfo.java</small></span></li>


      
      
      </ul>


      
      
      <pre>package onlyfun.caterpillar;<br><br>import java.io.*;<br>import java.net.*;<br><br>public class Download {<br>    public static void main(String[] args) {  <br>        try { <br>            URL url = new URL(args[0]);<br>            String fileName = url.getFile().substring(<br>                    url.getFile().lastIndexOf('/') + 1);<br><br>            BufferedInputStream inputStream = <br>                new BufferedInputStream(url.openStream()); <br>            BufferedOutputStream outputStream = <br>                new BufferedOutputStream( <br>                      new FileOutputStream(fileName)); <br><br>            int read = 0;<br>            while((read = inputStream.read()) != -1) { <br>                outputStream.write(read); <br>            } <br>            <br>            inputStream.close(); <br>            outputStream.flush(); <br>            outputStream.close(); <br>        } <br>        catch(Exception e) { <br>            e.printStackTrace();<br>        } <br>    } <br>}</pre>


      <span class="postbody"><small>
      </small><br>



      <br>













      </span> </td>














      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>



      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <br>


      
      
      <center>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>



      </center>



 </td>














    </tr>














  
  
  
  
  
  
  
  
  
  
  
  
  
  </tbody>
</table>














<br>













<span class="postbody"><br>














<br>














</span>
<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/URL.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:22 GMT -->
</html>
