<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/IntroduceJDBC.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:20 GMT -->
<head>













  
  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">













  
  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">













  
  
  
  
  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">













  
  
  
  
  
  
  
  
  
  
  
  
  
  <title>簡介 JDBC</title>
</head>


<body>













<h3><a href="../index.html">From
Gossip@Openhome</a></h3>













<h1><a href="index-2.html">Java Gossip: 簡介 JDBC</a></h1>













<span style="font-weight: bold;"></span>
<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">




  <tbody>




    <tr>




      <td style="width: 676px; vertical-align: top;"> <small>JDBC是用於執行SQL的Java API，它將資料庫存取的API與SQL陳述分開，實現資料庫無關的API介面，藉由JDBC統一的介面，開發人員只要專注於SQL陳述，而可以不必理會底層的資料庫驅動程式與相關介面。<br>



      <br>





使用JDBC，由廠商實作資料庫的介面，而SQL的操作部份由Java程式設計人員負責，如果要更換驅動程式，則只要載入新的驅動程式來源即可，Java 程式的部份則無需改變。<br>



      <br>





簡單的說，JDBC讓Java程式設計人員在撰寫資料庫程式的時候，可以「寫一個程式，適用所有的資料庫」。<br>



      <br>





下圖JDBC API、資料庫驅動程式與資料庫之間的關係： <br>



      <img style="width: 456px; height: 369px;" alt="JDBC" title="JDBC" src="images/introduceJDBC-1.jpg"><br>



      <br>






JDBC資料庫驅動程式依實作方式可以分為四個類型：<br>



      </small>











      
      
      
      <ul>



        <li><small>Type 1：JDBC-ODBC Bridge</small></li>



      
      
      
      </ul>





      
      
      
      <div style="margin-left: 40px;"><small>使用者的電腦上必須事先安裝好ODBC驅動程式，Type
1驅動程式利用Bridge的方式將JDBC的呼叫方式轉換為ODBC的呼叫方式，用於Microsoft Access之類的資料庫存取：<br>





      <em></em><br>





      <em></em></small></div>





      
      
      
      <div style="margin-left: 40px;"><small><em><span style="font-family: Courier New,Courier,monospace; font-weight: bold;">Application &lt;--&gt; </span><strong style="font-family: Courier New,Courier,monospace; font-weight: bold;"><span style="color: red;">JDBC-ODBC Bridge</span></strong><span style="font-family: Courier New,Courier,monospace; font-weight: bold;"> &lt;--&gt; ODBC
Driver &lt;--&gt; Database</span><br>





      </em></small></div>






      
      
      
      <ul>



        <li><small>Type 2：Native-API Bridge</small></li>



      
      
      
      </ul>





      
      
      
      <div style="margin-left: 40px;"><small>驅動程式上層包裝Java程式以與Java應用程式作溝通，將JDBC呼叫轉為原生程式碼的呼叫，下層為原生語
言（像是C、C++）來與資料庫作溝通，下層的函式庫是針對特定資料庫設計的，不若Type 1可以對ODBC架構的資料庫作存取：<br>





      <br>





      </small></div>





      
      
      
      <div style="margin-left: 40px;"><small><span style="font-family: Courier New,Courier,monospace;">&nbsp;</span><em><span style="font-family: Courier New,Courier,monospace; font-weight: bold;">Application &lt;--&gt; </span><strong style="font-family: Courier New,Courier,monospace; font-weight: bold;"><span style="color: red;">Native-API Bridge</span></strong><span style="font-family: Courier New,Courier,monospace; font-weight: bold;"> &lt;--&gt;
Native API &lt;--&gt; Database</span><br>





 </em></small></div>








      
      
      
      <ul>



        <li><small> Type 3：JDBC-Net</small></li>



      
      
      
      </ul>





      
      
      
      <div style="margin-left: 40px;"><small>透過中介的伺服器或中間件來存取資料庫，客戶端驅動程式以特定於伺服器或中間件的網路協定，與</small><small>伺服器或中間件</small><small>進行溝通，而由中介伺服器或中間件來完成所有的資料
庫存取動作，然後將結果傳回給驅動程式：<br>





      <br>





      </small></div>





      
      
      
      <div style="margin-left: 40px; font-family: Courier New,Courier,monospace; font-weight: bold;"><small><em>Application &lt;--&gt; <strong><span style="color: red;">JDBC-Net</span></strong> &lt;--&gt;
middleware 或 server &lt;--&gt; Database</em></small></div>









      
      
      
      <ul>



        <li><small> Type 4：Native-Protocol</small></li>



      
      
      
      </ul>






      
      
      
      <div style="margin-left: 40px;"><small>直接以資料庫的網路協定與資料庫作溝通，而不透過橋接、中介伺服器或中間件來存取資料庫：<br>





      <br>




      <span style="font-family: Courier New,Courier,monospace; font-weight: bold; font-style: italic;">
Application &lt;--&gt; </span><strong style="font-family: Courier New,Courier,monospace; font-weight: bold; font-style: italic;"><span style="color: red;">Native-Protocol</span></strong><span style="font-family: Courier New,Courier,monospace; font-weight: bold; font-style: italic;"> &lt;--&gt;
Database</span></small></div>





      <small><em></em><br>

Type 3與Type 4可以使用純Java撰寫，</small><small>跨平台時</small><small>是較建議採用的驅動程式。<br>

      <br>






MySQL的JDBC驅動程式屬於Type 4，稱之為Connector/J，目前有支援JDBC 2.0與JDBC
3.0的版本，您可以在以下的網站取得： <br>



      <a class="urllink" href="http://www.mysql.com/products/connector-j/index.html">http://www.mysql.com/products/connector-j/index.html</a></small>




      <br>




 </td>




      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>





      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>





      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>





      <br>




      
      
      
      
      <center>
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>





      </center>





 </td>




    </tr>




  
  
  
  </tbody>
</table>




<br>



<br>













<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/IntroduceJDBC.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:22 GMT -->
</html>
