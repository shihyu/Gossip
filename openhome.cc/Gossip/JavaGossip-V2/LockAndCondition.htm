<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/LockAndCondition.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
<head>












  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">












  
  
  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">












  
  
  
  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">












  
  
  
  
  
  
  
  
  
  
  
  
  <title>Lock 與 Condition</title></head>

<body>












<h3><a href="../index.html">From
Gossip@Openhome</a></h3>












<h1><a href="index-2.html">Java Gossip: Lock 與 Condition</a></h1>




<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">




  <tbody>




    <tr>




      <td style="width: 676px; vertical-align: top;"><small>對於初學者來說，<a href="ThreadSynchronized.htm">執
行緒的同步化</a> 並非是個容易理解的議題，在synchronized中隱含著物件鎖定與釋放鎖定的觀念，程式中並沒有明顯的語意來告知這一點，而必須靠程式設計人員本身記憶物件的鎖定與釋放鎖定問題。<br>


      <br>



在java.util.concurrent.locks套件中新增了Lock與Condition等類別，可以讓您明確的在程式中進行明確的鎖定與釋放鎖定。<br>


      <br>



Lock是一個介面，其中規範了lock()、unclock()與newCondition()三種方法：<br>


      </small>


      
      
      <ul>


        <li><small>lock()</small></li>


      
      
      </ul>



      
      
      <div style="margin-left: 40px;"><small>用來取得物件的鎖定。</small></div>



      
      
      <ul>


        <li><small>unlock()</small></li>


      
      
      </ul>



      
      
      <div style="margin-left: 40px;"><small>用來釋放物件的鎖定，通常由同一個Lock物件來呼叫lock()與unlock()。</small></div>



      
      
      <ul>


        <li><small>newCondition()</small></li>


      
      
      </ul>



      
      
      <div style="margin-left: 40px;"><small>建立一個與Lock物件相關聯的Conditon物件。<br>



      </small></div>


      <small>
Condition是一個介面，作用是在執行緒之間進行溝通，就如其名稱所示，告知執行緒目前的狀況為何，是要等待？還是通知？其規範的幾個重要方法為：<br>


      </small>
      
      
      <ul>


        <li><small>await()</small></li>


      
      
      </ul>



      
      
      <div style="margin-left: 40px;"><small>告知目前的執行緒等待，直到被通知或中斷（interrupted）。</small></div>



      
      
      <ul>


        <li><small>signal()</small></li>


      
      
      </ul>



      
      
      <div style="margin-left: 40px;"><small>通知目前等待中的一個執行緒，從上次的等待點繼續執行，類似物件的notify()方法</small></div>



      
      
      <ul>


        <li><small>signalAll()</small></li>


      
      
      </ul>



      
      
      <div style="margin-left: 40px;"><small>通知目前等待中的所有執行緒參與鎖定競爭，而後從上次的等待點繼續執行，類似物件的notifyAll()方法。</small></div>



      <small><br>



在這邊直接改寫<a href="WaitNotify.htm">wait
()、notify()</a> 中的Clerk類別，不使用synchronized、wait()、notify()，而改用Lock與Condition，其中ReentrantLock為Lock介面的一個實作類別：</small><br>











      
      
      <ul>


        <li>Clerk.java
  </li>


      
      
      </ul>








      
      
      <pre>import java.util.concurrent.locks.*;<br><br>public class Clerk {<br><span style="font-weight: bold;">    private Lock lock = new ReentrantLock();</span><br style="font-weight: bold;"><span style="font-weight: bold;">    private Condition threadCond = lock.newCondition();</span><br><br>    // -1 表示目前沒有產品<br>    private int product = -1; <br> <br>    // 這個方法由生產者呼叫<br>    public void setProduct(int product) { <br>        <span style="font-weight: bold;">lock.lock();</span><br>        try {<br>            while(this.product != -1) { <br>                try { <br>                    // 目前店員沒有空間收產品，請稍候！<br>                    <span style="font-weight: bold;">threadCond.await();</span><br>                } <br>                catch(InterruptedException e) { <br>                    e.printStackTrace(); <br>                } <br>            } <br> <br>            this.product = product; <br>            System.out.printf("生產者設定 (%d)%n", this.product); <br><br>            // 通知等待區中的一個消費者可以繼續工作了<br>            <span style="font-weight: bold;">threadCond.signal()</span>;<br>        }<br>        finally {<br><span style="font-weight: bold;">            lock.unlock();</span><br>        }<br>    } <br>    <br>    // 這個方法由消費者呼叫<br>    public int getProduct() { <br>        <span style="font-weight: bold;">lock.lock();</span><br>        int p = 0;<br>        try {<br>            while(this.product == -1) { <br>                try { <br>                    // 缺貨了，請稍候！<br>                   <span style="font-weight: bold;"> threadCond.await();</span><br>                } <br>                catch(InterruptedException e) { <br>                    e.printStackTrace(); <br>                } <br>            } <br> <br>            p = this.product; <br>            System.out.printf(<br>                  "消費者取走 (%d)%n", this.product); <br>            this.product = -1; <br> <br>            // 通知等待區中的一個生產者可以繼續工作了<br>            <span style="font-weight: bold;">threadCond.signal();</span><br>        }<br>        finally {<br><span style="font-weight: bold;">            lock.unlock();</span><br>        }<br>        return p; <br>    } <br>} <br></pre>







      </td>




      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>



      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <br>


      
      
      <center>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>



      </center>



 </td>




    </tr>




  
  
  
  </tbody>
</table>




<br>



<br>








<br>












<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/LockAndCondition.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
</html>