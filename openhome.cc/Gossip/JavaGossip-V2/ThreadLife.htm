<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/ThreadLife.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
<head>









  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">









  
  
  
  
  
  
  
  
  
  <title>執行緒生命周期</title>
</head>


<body>









<h3><a href="../index.html">From
Gossip@Openhome</a></h3>









<h1><a href="index-2.html">Java Gossip: 執行緒生命周期</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>執行緒的四個主要週期狀態如下所示：</small><br>





      <img style="width: 416px; height: 163px;" alt="執行緒生命週期" title="執行緒生命週期" src="images/threadLife-1.jpg"><br>





      <br>

      <small>



當您實例化一個Thread物件並執行<span style="font-weight: bold;">start()</span>之後，執行緒進入<span style="font-weight: bold;">Runnable狀態</span>並開始執行run()方法。<br>

      <br>





雖然執行緒看起來像是同時執行，但事實上同一時間點上，還是只有一個執行緒在動作，只是執行緒之間切換的動作很快，所以看來像是同時執行。<br>

      <br>





執行緒有其優先權，由<span style="font-weight: bold;">1（Thread.MIN_PRIORITY）到10（Thread.MAX_PRIORITY）</span>，<span style="font-weight: bold;">預設是 Thread.NORM_PRIORITY（5）</span>，您可以使用Thread的<span style="font-weight: bold;">setPriority()</span>方法來設定執行緒的優先權，設定必須在1到10之間，否則會丟出<span style="font-weight: bold;">IllegalArgumentException</span>。<br>

      <br>





優先權高的執行緒會先被執行完畢，然後才會輪到優先權低的執行緒，如果優先權相同，則<span style="font-weight: bold;">輸流執行（Round-robin方式）</span>。<br>

      <br>





決大多數的作業系統都支援<span style="font-weight: bold;">timeslicing</span>，簡單的說就是作業
系統會為每個執行緒分配一小段CPU時間（quantum），時間一到就換下一個執行緒，即使現有的執行緒還沒結束。對於不支援timeslicing的
作業系統，每一個執行緒必須完成後，才能輪到下一個執行緒，在這樣的作業系統中，如果您想要讓目前執行緒禮讓一下其它執行緒，讓它們有機會取得執行權，您
可以在呼叫緒行緒的<span style="font-weight: bold;">yield()</span>方法，例如： <br>

      </small>























      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">public class SomeClass { </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; // ..... </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread thread = new Thread(new Runnable() {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void run() { </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // .... </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(true) { </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // .... </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Thread.yield();&nbsp; // 暫時讓出執行權 </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; thread.start();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; // ....</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">





      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">}</span><br>





      </small></div>









      <small><br>






yield()方法讓同樣優先權的執行緒有被執行的機會，當執行緒執行yield()方法讓出執行權時，它會再度加入執行緒的
排班，等待再度取得執行權，對於支援timeslicing的作業系統，呼叫yield()是不太需要的，因為作業系統會自動分配時間給執行緒輪流執行。<br>

      <br>





有幾種狀況會讓執行緒進入<span style="font-weight: bold;">Not Runnable狀態（或是blocked狀態）</span>： <br>

      </small>









      
      <ol>

        <li><small> 呼叫sleep() </small></li>

        <li><small> 呼叫wait() </small></li>

        <li><small> 等待I/O完成 </small></li>

      
      </ol>






      <small><br>





當執行緒在Not
Runnable狀態時，執行緒是可以被執行的，但有某些原因阻止它執行（例如等待使用者的輸入），執行緒排班器將不分配執行時間給這個執行緒，直到以下
的幾個情況讓執行緒回到Runnable狀態： <br>

      </small>




      
      <ol>

        <li><small> 執行緒呼叫notify() </small></li>

        <li><small> 執行緒呼叫notifyAll() </small></li>

        <li><small> 執行緒呼叫interrupt() </small></li>

      
      </ol>






      <small><br>





當執行緒因為I/O而進入blocked狀態，它必須等到I/O完成才可以離開這個狀態。 <br>

      <br>





最後，如果執行的工作完成（或發生例外）而離開run()方法，則執行緒執行完畢，進入<span style="font-weight: bold;">Dead狀態</span>，您可以使用<span style="font-weight: bold;">isAlive()</span>方法來測試執行緒是否
存活。 <br>

      <br>





如果您查詢Java的線上API文件，您會發現有<span style="font-weight: bold;">suspend()、resume()、stop()</span>等方法，這些方法Java並不建議您使用，而且已經
被標示為<span style="font-weight: bold;">"deprecated"</span>，這些方法建議您在需要的時候自行實作。 <br>

      <br>





這邊舉個簡單的例子，當您使用<span style="font-weight: bold;">Thread.sleep()</span>讓執行緒暫停執行進入Not
Runnable狀態，您可以使用<span style="font-weight: bold;">interrupt()</span>讓它離開Not Runnable狀態，當使用sleep()暫時進入Not
Runnable狀態而您interrupt()時，會丟出<span style="font-weight: bold;">InterruptedException</span>例外物件，例如： </small>














      <span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><br>





      </span>
      
      <ul>

        <li>InterruptDemo.java&nbsp;</li>

      
      </ul>





      
      <pre>package onlyfun.caterpillar;<br> <br>public class InterruptDemo { <br>    public static void main(String[] args) { <br>        Thread thread1 = new Thread(new Runnable() { <br>            public void run() { <br>                try { <br>                    Thread.sleep(99999); <br>                } <br>                catch(InterruptedException e) { <br>                    System.out.println("I'm interrupted!!"); <br>                    //e.printStackTrace(); <br>                } <br>             } <br>        }); <br> <br>      thread1.start(); <br>      thread1.interrupt(); // interrupt it right now <br>   } <br>}<br></pre>





      <br>

      <small>



執行結果： </small><span class="postbody"></span><br>









      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">









  <tbody>









    <tr>









      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">I'm interrupted!&nbsp;</span></small><span style="color: rgb(255, 255, 255);"><br>









      </span></td>









    </tr>









  
  
  
  
  
  
  
  
        
        </tbody>
      
      </table>









      <br>

      <small>



關於執行緒的wait()、notify()、notifyAll()等方法，在之後的文章中會陸續介紹。</small><br>




 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>



      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <br>


      
      
      <center>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>



      </center>



 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>





<br>









<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/ThreadLife.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
</html>
