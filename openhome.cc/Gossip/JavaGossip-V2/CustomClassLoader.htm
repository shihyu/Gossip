<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/CustomClassLoader.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:20 GMT -->
<head>







  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">







  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">







  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">







  
  
  
  
  
  
  
  <title>自訂 ClassLoader</title>
</head>


<body>







<h3><a href="../index.html">From
Gossip@Openhome</a></h3>







<h1><a href="index-2.html">Java Gossip: 自訂 ClassLoader</a></h1>








<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small><span style="font-weight: bold;">ExtClassLoader與AppClassLoader都是 java.net.URLClassLoader的子類別</span>，您可以在使用java啟動程式時，使用以下的指令來指定ExtClassLoader的搜尋路徑：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">java -Djava.ext.dirs=c:\workspace\ YourClass</span><br>



      </small></div>

      <small>

&nbsp;<br>



可以在使用java啟動程式時，使用-classpath或-cp來指定AppClassLoader的搜尋路徑，也就是設定Classpath：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">java -classpath c:\workspace\ YourClass</span><br>



      </small></div>

      <small>

&nbsp;<br>



ExtClassLoader與AppClassLoader在程式啟動後會在虛擬機器中存在一份，您在程式運行過程中就無法再改變它的搜尋路徑，如果在程式運行過程中，打算動態決定從其它的路徑載入類別，就要產生新的類別載入器。<br>

      <br>



您可以使用URLClassLoader來產生新的類別載入器，它需要java.net.URL作為其參數來指定類別載入的搜尋路徑，例如：<br>

      </small>



      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">URL url1 = new URL("file:/d:/workspace/");</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">URLClassLoader urlClassLoader1 = </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new URLClassLoader(new URL[] {url1});</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">Class c1 = urlClassLoader1.loadClass("ClassDemoTest");</span><br>



      </small></div>

      <small>

&nbsp;<br>

      <br>



在新增了ClassLoader後，您可以使用它的loadClass()方法來指定要載入的類別名稱，新增
ClassLoader時，會自動將新增的ClassLoader的parent設定為AppClassLoader，並在每次載入類別時，先委託
parent代為搜尋，所以上例中搜尋ClassDemoTest類別時，會一路往上委託至Bootstrap
Loader先開始搜尋，接著是ExtClassLoader、AppClassLoader，如果都找不到，才使用新增的ClassLoader搜尋。<br>

      <br>



由同一個ClassLoader載入的類別檔案，會只有一份Class實例，如果同一個類別檔案是由兩個不同的ClassLoader載入，則會有兩份不
同的Class實例，注意這個說法，如果有兩個不同的ClassLoader搜尋同一個類別，如果在parent的
AppClassLoader搜尋路徑中就可以找到，則Class實例就只會有一個，如果是由各自的ClassLoader搜尋到，則Class的實例會
有兩份。<br>

      <br>



下面這個實例是個簡單的示範，其中"file:/d:/workspace/"不在ExtClassLoader或AppClassLoader的搜尋路徑中，所以同一個類別會分由兩個ClassLoader載入，因而會有兩份Class實例：</small>





      <br>







      
      <ul>

        <li> ClassLoaderDemo.java
  </li>

      
      </ul>




      
      <pre>import java.net.MalformedURLException;<br>import java.net.URL;<br>import java.net.URLClassLoader;<br><br>public class ClassLoaderDemo {<br>    public static void main(String[] args) <br>            throws MalformedURLException, <br>                   ClassNotFoundException {<br>        URL url1 = new URL("file:/d:/workspace/");<br>        URLClassLoader urlClassLoader1 = <br>                      new URLClassLoader(new URL[] {url1});<br>        Class c1 = <br>                urlClassLoader1.loadClass("ClassLoaderTest");<br>        <br>        System.out.println(c1);<br>        <br>        URL url2 = new URL("file:/d:/workspace/");<br>        URLClassLoader urlClassLoader2 = <br>                      new URLClassLoader(new URL[] {url2});<br>        Class c2 = <br>                urlClassLoader2.loadClass("ClassLoaderTest");<br>        <br>        System.out.println(c2);<br>        <br>        System.out.println(c1 == c2);<br>    }<br>} <br></pre>




      <br>

      <small>

執行結果會顯示false；如果將ClassLoaderTest移至Classpath下，也就是
AppClassLoader可以搜尋到的路徑下，結果是ClassLoaderTest會被AppClassLoader載入，即使我們使用兩個自訂的
ClassLoader，但載入的Class實例也只有一個，再次執行同一個程式，則結果會顯示true。</small><br>


 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>



      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <br>


      
      
      <center>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>



      </center>



 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>







<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/CustomClassLoader.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:20 GMT -->
</html>
