<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/RegularExpression.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
<head>








  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">








  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">








  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">








  
  
  
  
  
  
  
  
  <title>使用正則表示式（Regular expression）</title>
</head>


<body>








<h3><a href="../index.html">From
Gossip@Openhome</a></h3>








<h1><a href="index-2.html">Java Gossip: 使用正則表示式（Regular expression）</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>如果您查詢J2SE 1.4之後String的線上API手冊說明，您會發現有<span style="font-weight: bold;">matches()、replaceAll()</span>等方法，您所傳入的參數是<span style="font-weight: bold;">「正則表示式」（Regular expression）</span>的字串，正則表示式的功能是J2SE 1.4之後加入的新功能。<br>

      <br>







正則表示式最早是由數學家Stephen Kleene于1956年提出，主要使用在字元字串的格式比對，後來在資訊領域廣為應用，現在已經成為ISO（國際標準組織）的標準之一。<br>

      <br>







Java在J2SE 1.4之後開始支援正則表示式，您可以在API文件的 <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html">java.util.regex.Pattern</a> 類別中找到支援的正則表示式相關資訊。<br>

      <br>







如果您使用String類別來配置字串物件，您可以使用簡易的方法來使用正則表示式，並應用於字串的比對或取代等動作上，以下先介紹幾個簡單的正則表示式。<br>

      <br>







例如一些常用的範圍，我們可以使用預先定義的字元類別：</small>























      <br>








      
      <table align="left" border="1" width="100%">








  <tbody>








    <tr>








      <td align="left" valign="top"><small>. </small></td>








      <td align="left" valign="top"><small>符合任一字元 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>\d </small></td>








      <td align="left" valign="top"><small>等於 [0-9] 數字 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>\D </small></td>








      <td align="left" valign="top"><small>等於 [^0-9] 非數字 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>\s </small></td>








      <td align="left" valign="top"><small>等於 [ \t\n\x0B\f\r] 空白字元 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>\S </small></td>








      <td align="left" valign="top"><small>等於 [^ \t\n\x0B\f\r] 非空白字元 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>\w </small></td>








      <td align="left" valign="top"><small>等於 [a-zA-Z_0-9] 數字或是英文字 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>\W </small></td>








      <td align="left" valign="top"><small>等於 [^a-zA-Z_0-9] 非數字與英文字 </small></td>








    </tr>








  
  
  
  
  
  
  
        
        </tbody>
      
      </table>








      <br clear="all">







      <br>

      <small>





. 符合任一字元。例如有一字串abcdebcadxbc，使用.bc來比對的話，符合的子字串有abc、ebc、xbc三個；如果使用..cd，則符合的子字串只有bcd。<br>

      <br>







以上的例子來根據字元比對，您也可以使用<span style="font-weight: bold;">「字元類」（Character class）</span>來比較一組字元範圍，例如： </small>





      <br>







      <br>







      
      <table align="left" border="1" width="100%">







  <tbody>







    <tr>







      <td align="left" valign="top"><small>[abc] </small></td>








      <td align="left" valign="top"><small>a、b或c </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>[^abc] </small></td>








      <td align="left" valign="top"><small>非a、b、c的其它字元 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>[a-zA-Z] </small></td>








      <td align="left" valign="top"><small>a到z或A到Z（範圍） </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>[a-d[m-p]] </small></td>








      <td align="left" valign="top"><small>a到d或m到p（聯集） </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>[a-z&amp;&amp;[def]] </small></td>








      <td align="left" valign="top"><small>d、e或f（交集） </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>[a-z&amp;&amp;[^bc]] </small></td>








      <td align="left" valign="top"><small>a到z，除了b與c之外（減集） </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>[a-z&amp;&amp;[^m-p]] </small></td>








      <td align="left" valign="top"><small>a到z且沒有m到p（a-lq-z）（減集） </small></td>








    </tr>








  
  
  
  
  
  
  
        
        </tbody>
      
      </table>







      <br>







      <br>







      <br>







      <br>







      <br>







      <br>







      <br>







      <br>







      <br>







      <br>

      <small>






一次只指定一個字元不過癮，也可以用<span style="font-weight: bold;">Greedy quantifiers</span>來指定字元可能出現的次數： </small><br>







      <br>








      
      <table align="left" border="1" width="100%">








  <tbody>








    <tr>








      <td align="left" valign="top"><small>X? </small></td>








      <td align="left" valign="top"><small>X出現一次或完全沒有 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>X* </small></td>








      <td align="left" valign="top"><small>X出現零次或多次 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>X+ </small></td>








      <td align="left" valign="top"><small>X出現一次或多次 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>X{n} </small></td>








      <td align="left" valign="top"><small>X出現n次 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>X{n,} </small></td>








      <td align="left" valign="top"><small>X出現至少n次 </small></td>








    </tr>








    <tr>








      <td align="left" valign="top"><small>X{n,m} </small></td>








      <td align="left" valign="top"><small>X出現至少n次，但不超過m次 </small></td>








    </tr>








  
  
  
  
  
  
  
        
        </tbody>
      
      </table>








      <br clear="all">








      <br>

      <small>







另外還有<span style="font-weight: bold;">Reluctant quantifiers</span>、<span style="font-weight: bold;">Possessive quantifiers</span>等的指定，您可以自行參考<a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html"> </a><cite class="urllink"><a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html">java.util.regex.Pattern</a> </cite>類別中的說明。<br>

      <br>







在String類別中，<span style="font-weight: bold;">matches()</span>方法可以讓您驗證字串是否符合指定的正規表示式，這通常用於驗證使用者輸入的字串資料是否正確，例如
電話號碼格式；<span style="font-weight: bold;">replaceAll()</span>方法可以將符合正規表示式的子字串置換為指定的字串；<span style="font-weight: bold;">split()</span>方法可以讓您依指定的正規表示式，將符合的子
字串分離出來，並以字串陣列傳回。 <br>

      <br>

      <br>








下面這個程式示範幾個正則表示式的應用： </small>


















      <br>







      
      <ul>

        <li>UseRegularExpression.java</li>

      
      </ul>








      
      <pre>import java.util.Scanner;<br> <br>public class UseRegularExpression { <br>    public static void main(String args[]) { <br>        Scanner scanner = new Scanner(System.in);<br> <br>        String str = "abcdefgabcabc"; <br>        System.out.println(str.replaceAll(".bc", "###")); <br> <br>        System.out.print("輸入手機號碼: "); <br>        str = scanner.next();<br> <br>        // 簡單格式驗證 <br>        if(str.matches("[0-9]{4}-[0-9]{6}")) <br>            System.out.println("格式正確"); <br>        else <br>            System.out.println("格式錯誤");<br> <br>        System.out.print("輸入href標籤: "); <br>        // Scanner的next()方法是以空白為區隔<br>        // 我們的輸入有空白，所以要執行兩次<br>        str = scanner.next() + " " + scanner.next();<br> <br>        // 驗證href標籤 <br>        if(str.matches("<span class="javascript" id="text120169">&lt;a.+href*=*['\"]?.*?['\"]?.*?&gt;</span>"))<br>            System.out.println("格式正確"); <br>        else<br>            System.out.println("格式錯誤");<br> <br>        System.out.print("輸入電子郵件: "); <br>        str = scanner.next();<br> <br>        // 驗證電子郵件格式 <br>        if(str.matches(<br>        "^[_a-z0-9-]+([.][_a-z0-9-]+)*@[a-z0-9-]+([.][a-z0-9-]+)*$"))<br>            System.out.println("格式正確"); <br>        else<br>            System.out.println("格式錯誤"); <br>    } <br>} <br></pre>








      <br>

      <small>





執行結果：</small><span class="postbody"></span><br>








      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">








  <tbody>








    <tr>








      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">&nbsp;###defg######<br>







&nbsp;輸入手機號碼: 0988-100432<br>







&nbsp;格式正確<br>







&nbsp;輸入href標籤: &lt;a href="http://openhome.cc"&gt;<br>







&nbsp;格式正確<br>







&nbsp;輸入電子郵件: justin@openhome.cc<br>







&nbsp;格式正確</span></small><span style="color: rgb(255, 255, 255);"><br>








      </span></td>








    </tr>








  
  
  
  
  
  
  
        
        </tbody>
      
      </table>








      <br>

      <small>





最後兩個href標籤與email驗證例子是很常見的正規表示式應用，您可以仔細看看以瞭解如何比對，並不會特別困難。</small><br>






 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>


      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      
      <center>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>


      </center>


 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>








<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/RegularExpression.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
</html>
