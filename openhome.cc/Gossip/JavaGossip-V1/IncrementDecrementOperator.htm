<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/IncrementDecrementOperator.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
<head>




  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">




  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">




  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">




  
  
  
  
  <title>遞增、遞減運算</title></head>

<body>




<h3><a href="../index.html">From
Gossip@Openhome</a></h3>




<h1><a href="index-2.html">Java Gossip:&nbsp;<span class="wikilink">遞
增、遞減運算</span></a></h1>



<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">



  <tbody>



    <tr>



      <td style="width: 676px; vertical-align: top;"> <small>

遞增、遞減與指定運算子，老實說常成為初學者的一個惡夢，因為有些程式中若寫得精簡，這幾個運算子容易讓初學者搞不清楚程式的真正運算結果是什麼；事實
上，使用這幾種運算子的目的除了使讓程式看來比較簡潔之外，還可以稍微增加一些程式執行的效率。<br>


      <br>




在程式中對變數遞增1或遞減1是很常見的運算，例如：<br>


      </small>



      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int i = 0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">i = i + 1; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(i);
      </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">i = i - 1; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(i);</span><br>




      </small></div>




      <small><br>




這段程式會分別顯示出1與0兩個數，您可以這麼寫這個程式：<br>


      </small>

      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int i = 0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(++i);
      </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(--i);
      </span><br>




      </small></div>




      <small><br>




其中寫在變數 i 之前的<span style="font-weight: bold;">++</span>與<span style="font-weight: bold;">--</span>就是<span style="font-weight: bold;">「遞
增運算子」（Increment
operator）</span>與<span style="font-weight: bold;">「遞減運算子」（Decrement
operator）</span>，當它們撰寫在變數之前時，其作用就相當於將變數遞增1與遞減1： <br>


      </small>

      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">++i;&nbsp;&nbsp;&nbsp;
// i = i + 1; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">--i;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// i = i - 1;</span><br>




      </small></div>




      <small><br>




您可以將遞增或遞減運算子撰寫在變數之前或變數之後，但其實兩者是有差別的，將遞增（遞減）運算子撰寫在變數前時，表示先將變數的值加（減）1，然後再傳
回變數的值，將遞增（遞減）運算子撰寫在變數之後，表示先傳回變數值，然後再對變數加（減）1，例如： <br>


      </small>

      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int i = 0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int number = 0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">number =
++i;&nbsp;&nbsp; // 相當於i = i + 1; number = i; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(number);
      </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">number =
--i;&nbsp;&nbsp;&nbsp; // 相當於i = i - 1; number = i; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(number);
      </span><br>




      </small></div>




      <small><br>




在這段程式中，number的值會前後分別顯示為1與0，再看看下面這段： <br>


      </small>

      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int i = 0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int number = 0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">number =
i++;&nbsp;&nbsp;&nbsp; // 相當於number = i; i = i + 1; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(number);
      </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">number =
i--;&nbsp;&nbsp;&nbsp;&nbsp; // 相當於 number = i; i = i - 1; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(number);
      </span><br>




      </small></div>




      <small><br>




在這段程式中，number的值會顯示前後分別為0與1。<br>


      <br>




接下來看<span style="font-weight: bold;">「指定運算子」（Assignment operator）</span>，
到目前為止只看過一個指定運算子，也就是（=）這個運算子，事實上指定運算子還有以下的幾個： </small>

      <br>




      
      
      <table style="width: 100%;" border="1">




  <tbody>




    <tr>




      <td style="vertical-align: top; text-align: left; background-color: rgb(204, 204, 204); font-weight: bold;"><small>運
算子 </small></td>




      <td style="vertical-align: top; text-align: left; background-color: rgb(204, 204, 204); font-weight: bold;"><small>範
例 </small></td>




      <td style="vertical-align: top; text-align: left; background-color: rgb(204, 204, 204); font-weight: bold;"><small>結
果 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>+= </small></td>




      <td align="left" valign="top"><small>a += b </small></td>




      <td align="left" valign="top"><small>a = a + b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>-= </small></td>




      <td align="left" valign="top"><small>a -= b </small></td>




      <td align="left" valign="top"><small>a = a - b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>*= </small></td>




      <td align="left" valign="top"><small>a *= b </small></td>




      <td align="left" valign="top"><small>a = a * b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>/= </small></td>




      <td align="left" valign="top"><small>a /= b </small></td>




      <td align="left" valign="top"><small>a = a / b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>%= </small></td>




      <td align="left" valign="top"><small>a %= b </small></td>




      <td align="left" valign="top"><small>a = a % b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>&amp;= </small></td>




      <td align="left" valign="top"><small>a &amp;= b </small></td>




      <td align="left" valign="top"><small>a = a &amp; b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>|= </small></td>




      <td align="left" valign="top"><small>a |= b </small></td>




      <td align="left" valign="top"><small>a = a | b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>^= </small></td>




      <td align="left" valign="top"><small>a ^= b </small></td>




      <td align="left" valign="top"><small>a = a ^ b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>&lt;&lt;= </small></td>




      <td align="left" valign="top"><small>a &lt;&lt;= b </small></td>




      <td align="left" valign="top"><small>a = a &lt;&lt; b </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>&gt;&gt;= </small></td>




      <td align="left" valign="top"><small>a &gt;&gt;= b </small></td>




      <td align="left" valign="top"><small>a = a &gt;&gt; b</small></td>




    </tr>




  
  
        
        
        <tr><td align="left" valign="top"><small>&gt;&gt;&gt;=</small></td><td align="left" valign="top"><small>a &gt;&gt;&gt;= b</small></td><td align="left" valign="top"><small>a = a &gt;&gt;&gt; b</small></td></tr></tbody>
      
      
      </table>




      <br>


      <small>

每個指定運算子的作用如上所示，但老實說若不是常寫程式的老手，當遇到這些指定運算子時，有時可能會楞一下，因為不常用的話，這些語法並不是那麼的直覺。<br>


      <br>




使用++、--或指定運算子，由於程式可以直接在變數的記憶體空間中運算，而不用取出變數值、運算再將數值存回變數的記憶體空間，所以可以增加運算的效
率，但以現在電腦的運算速度來看，這一點的效率可能有些微不足道，除非您這類的運算相當的頻繁，否則是看不出這點效率所帶來的改善，就現在程式撰寫的規模
來看，程式的易懂易讀有時反而是重點，可以的話儘量將程式寫的詳細一些會比較好，千萬不要為了賣弄語法而濫用這些運算子。<br>


      <br>

      </small><br>



 </td>



      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>


      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      
      <center>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>


      </center>


 </td>



    </tr>



  
  
  </tbody>
</table>



<br>


<br>




<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/IncrementDecrementOperator.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
</html>