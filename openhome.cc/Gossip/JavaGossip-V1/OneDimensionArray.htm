<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/OneDimensionArray.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
<head>






  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">




  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">




  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type"><title>一維陣列物件</title></head><body>




<h3><a href="../index.html">From
Gossip@Openhome</a></h3>




<h1><a href="index-2.html">Java Gossip: 一維陣列物件</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>您現在要整理全班的程式設計小考成績，您希望寫個小程式，全班共有40名學生，所以您必須有40個變數來儲存學生的成績，現在問題來了，根據之前學過的，難道您要宣告40個名稱不同的變數來儲存學生的成績資料嗎？<br>

      <br>



當然您知道不會這麼麻煩的，Java提供<span style="font-weight: bold;">「陣列」（Array）</span>讓您可以宣告一個以<span style="font-weight: bold;">「索引」（Index）</span>作為識別的資料結構，在Java中可以這麼宣告一個陣列並初始陣列內容：<br>

      </small>



      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int[] score = {90, 85, 55, 94, 77}; </span><br>



      </small></div>



      <small><br>



上面這個程式片段宣告了一個score陣列，它的內容包括90、85、55、94與77這五個元素，我們要存取陣列時，必須使用索引來指定存取陣列中的哪個元素，在Java中，<span style="font-weight: bold;">陣列的索引是由0開始</span>，也就是說索引0的位置儲存90、索引1的位置儲存85、索引2的位置儲存55，依此類推。<br>

      <br>



下面這個程式可以讓您使用for迴圈來取出陣列中的元素值： </small>

      <br>




      
      <ul>

        <li> ScoreArray.java </li>

      
      </ul>




      
      <pre>public class ScoreArray { <br>    public static void main(String[] args) { <br>        int[] score = {90, 85, 55, 94, 77};<br> <br>        for(int i = 0; i &lt; score.length; i++) <br>            System.out.print(score[i] + " "); <br>        System.out.println(); <br>    } <br>} </pre>



      <br>




      <small><span class="postbody">
執行結果：</span></small><br>




      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">




  <tbody>




    <tr>




      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">90 85 55 94 77&nbsp;</span></small><span style="color: rgb(255, 255, 255);"><br>




      </span></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br>

      <small>

在存取陣列元素時，必須注意到所指定的索引值不可超出陣列範圍，例如在上例中，我們不可以存取超過4的索引值，否則會發生<span style="font-weight: bold;">ArrayIndexOutOfBoundsException</span>例外。<br>

      <br>



在這個程式中，您使用了<span style="font-weight: bold;">length</span>這個屬性成員，這邊涉及到一個觀念，在Java中，<span style="font-weight: bold;">陣列是一個物件</span>，而不是單純的資料集合，當您宣告一個陣列時，其實就是在配置一個陣列物件，上面的程式只是陣列宣告與初始化成員的一個簡易宣告方式，陣列物件的length屬性成員可以取回這個陣列的長度，也就是元素個數。<br>

      <br>



其實在Java中，物件都是以<span style="font-weight: bold;">new</span>來配置記憶體空間，陣列的使用也不例外，一個完整的陣列宣告方式如下所示： <br>

      </small>





      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int[] arr = new int[10]; </span><br>



      </small></div>



      <small><br>

      <br>



在上面的宣告中，會為arr配置10個整數的陣列元素，索引為0到9，初始值預設為0，在Java中配置陣列之後，若還沒有指定初值，則依資料型態的不同，會預設有不同的初值，如下所示： </small>

      <br>



      
      <table style="width: 50%;" border="1">



  <tbody>



    <tr>



      <td style="vertical-align: top; text-align: left; background-color: rgb(204, 204, 204);"><small>資料型態 </small></td>




      <td style="vertical-align: top; text-align: left; background-color: rgb(204, 204, 204);"><small>初值 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>byte </small></td>




      <td align="left" valign="top"><small>0 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>short </small></td>




      <td align="left" valign="top"><small>0 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>int </small></td>




      <td align="left" valign="top"><small>0 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>long </small></td>




      <td align="left" valign="top"><small>0L </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>float </small></td>




      <td align="left" valign="top"><small>0.0f </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>double </small></td>




      <td align="left" valign="top"><small>0.0d </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>char </small></td>




      <td align="left" valign="top"><small>\u0000 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>boolean </small></td>




      <td align="left" valign="top"><small>false </small></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      
      <p><small>
下面這個程式使用配置的語法來宣告陣列，並使用迴圈來設定其值及顯示：</small></p>



      
      <ul>

        <li> BasicArray.java</li>

      
      </ul>



      
      <pre>public class BasicArray { <br>    public static void main(String[] args) { <br>        int[] arr = new int[10];<br> <br>        System.out.print("Array值: "); <br>        for(int i = 0; i &lt; arr.length; i++) { <br>            System.out.print(arr[i] + " "); <br>            arr[i] = i; <br>        }<br><br>        System.out.print("\n\nArray值: "); <br>        for(int i = 0; i &lt; arr.length; i++) <br>            System.out.print(arr[i] + " "); <br>        System.out.println(); <br>    } <br>}</pre>




      <br clear="all">



      <small><span class="postbody">
執行結果：</span></small><br>




      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">




  <tbody>




    <tr>




      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">Array值: 0 0 0 0 0 0 0 0 0 0 <br>



      <br>



Array值: 0 1 2 3 4 5 6 7 8 9 </span></small><span style="color: rgb(255, 255, 255);"><br>




      </span></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br>

      <small>


由於陣列的記憶體空間是使用new配置而來，這意味著您也可以使用動態的方式來宣告陣列長度，而不用在程式中事先決定陣列大小，例如： </small><br>




      
      <ul>

        <li> CustomArrayLength.java<br>



  </li>

      
      </ul>




      
      <pre>import java.util.Scanner;<br> <br>public class CustomArrayLength {<br>    public static void main(String[] args) {<br>        Scanner scanner = new Scanner(System.in);<br> <br>        System.out.print("請輸入Array大小: "); <br> <br>        int length = scanner.nextInt();<br>        int[] arr = new int[length];  // 動態配置長度 <br> <br>        System.out.println("Array長度: " + arr.length); <br>        System.out.print("內容: "); <br>        for(int i = 0; i &lt; arr.length; i++) <br>            System.out.print(arr[i] + " "); <br>        System.out.println();<br>    }<br>} <br></pre>




      <br>



      <small><span class="postbody">
執行結果：</span></small><br>




      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">




  <tbody>




    <tr>




      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">請輸入Array大小: 20 <br>



Array長度: 20 <br>



內容: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 </span></small><span style="color: rgb(255, 255, 255);"><br>




      </span></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>



      <br>

      <small>

在上面的程式中，您先宣告一個陣列名稱arr，使用int[] arr表示這個名稱將參考至一個一維陣列物件，您也可以使用int[] arr，這兩種宣告方式都是可以接受的，在使用者輸入指定長度後，您使用這個長度來配置陣列物件，並將這個陣列物件指定給arr來參考。<br>

      <br>



陣列的索引值由0開始並不是沒有原因的，事實上索引值表示所指定的陣列元素相對於陣列第一個元素記憶體位置的<span style="font-weight: bold;">位移量（Offset）</span>，位移量為0，自然就是指第一個元素，而索引9就是指相對於第一個元素的位移量為9。在Java中您不直接處理關於記憶體位址的操作，以上的觀念是讓您更瞭解一些陣列索引的運作原理。</small>

 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>


      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      
      <center>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>


      </center>


 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>



<br>



<br>




<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/OneDimensionArray.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
</html>