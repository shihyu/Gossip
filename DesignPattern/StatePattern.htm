<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/DesignPattern/StatePattern.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:07:39 GMT -->
<head>
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">

  
  <link rel="stylesheet" href="css/print.css" type="text/css">

  
  <meta content="text/html; charset=Big5" http-equiv="content-type">
  <title>State 模式</title>

  
</head><body>
<h3><a href="../index.html">From
Gossip@Openhome</a></h3>

<h1><a href="index-2.html">Design Pattern:&nbsp;State 模式</a></h1>

<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">

  <tbody>
    <tr>
      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
   <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script><br><br>   <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>
      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>
      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>
      <br>
      <center>
       <br>
      </center>
      </td>
      <td style="vertical-align: top; width: 690px; text-align: left;">
      <small>您現在正設計一個交通號誌程式，假設目前只有紅、綠、黃三個燈號，您也許會這麼設計：<br>
      </small>
      <pre>class TrafficLight {<br>    private enum State {RED, GREEN, YELLOW}<br>    private State state = State.RED;<br>    void change() {<br>        switch(state) {<br>             case RED:<br>                 System.out.println("紅燈");<br>                 sleep(5000);<br>                 state = State.GREEN;<br>                 break;<br>             case GREEN:<br>                 System.out.println("綠燈");<br>                 sleep(5000);<br>                 state = State.YELLOW;                 <br>                 break;<br>             case YELLOW:<br>                 System.out.println("黃燈");<br>                 sleep(1000);<br>                 state = State.RED;<br>        }<br>    }<br>    private void sleep(int second) {<br>        try {<br>            Thread.sleep(second);<br>        }<br>        catch(InterruptedException e) {<br>            e.printStackTrace();<br>        }<br>    }<br>}<br></pre>
      <br>
      <small>這
是以結構化的方式來設計，優點是簡單直覺，缺點是若狀態增多（也許增加多個時相燈號）時，整個流程會變得冗長，如果狀態變化非線性結構（如紅--&gt;
綠--&gt;黃），可能有兩個或多個方向的狀態變化時，結構化的設計方式，將會增加更多層次的判斷，造成程式碼閱讀、管理的麻煩。<br>
      <br>
      <span style="font-weight: bold;">可以考慮讓每個狀態各自成為一個物件，負責自己該狀態的服務，並提供切
換狀態的方法</span></small><small>。<br>
      </small>
      <pre>interface State {<br>    void change(TrafficLight light);<br>}<br><br>abstract class Light implements State {<br>    public abstract void change(TrafficLight light);<br>    protected void sleep(int second) {<br>        try {<br>            Thread.sleep(second);<br>        }<br>        catch(InterruptedException e) {<br>            e.printStackTrace();<br>        }<br>    }<br>}<br><br>class Red extends Light {<br>    public void change(TrafficLight light) {<br>        System.out.println("紅燈");<br>        sleep(5000);<br>        light.set(new Green()); // 如果考慮彈性調整狀態，可以不用寫死狀態物件設定<br>    }<br>}<br><br>class Green extends Light {<br>    public void change(TrafficLight light) {<br>        System.out.println("綠燈");<br>        sleep(5000);<br>        light.set(new Yellow());<br>    }<br>}<br><br>class Yellow extends Light {<br>    public void change(TrafficLight light) {<br>        System.out.println("黃燈");<br>        sleep(1000);<br>        light.set(new Red());<br>    }<br>}<br><br>class TrafficLight {<br>    private State current = new Red();<br>    void set(State state) {<br>        this.current = state;<br>    }<br>    void change() {<br>        current.change(this);<br>    }<br>}<br><br>public class Main {<br>    public static void main(String[] args) {<br>        TrafficLight trafficLight = new TrafficLight();<br>        while(true) {<br>            trafficLight.change();<br>        }<br>    }<br>}</pre>
      <small><br>
當狀態的轉換有方向性時，這樣的設計就很有彈性，正如範例所示的，對於單一方向性的狀態變化，可以提供一個change()方法來轉換狀態，如果狀態有前
後切換，則可以提供back()、forward()方法來切換，依此類推...<br>
      <br>
以Python來實現這個範例：<br>
      </small>
      <pre>import time<br><br>class Red:<br>    def change(self, light):<br>        print("紅燈")<br>        time.sleep(5)<br>        light.set(Green())<br><br>class Green:<br>    def change(self, light):<br>        print("綠燈")<br>        time.sleep(5)<br>        light.set(Yellow())<br><br>class Yellow:<br>    def change(self, light):<br>        print("黃燈")<br>        time.sleep(1)<br>        light.set(Red())<br><br>class TrafficLight:<br>    def __init__(self):<br>        self.current = Red()<br>    <br>    def set(self, state):<br>        self.current = state<br>    <br>    def change(self):<br>        self.current.change(self)<br>        <br>trafficLight = TrafficLight()<br>while True:<br>    trafficLight.change()</pre>
      <small><br>
以UML表示State模式結構：<br>
      <img style="width: 503px; height: 232px;" alt="" src="images/State-1.jpg"><br>
      </small><small><br>
      </small> </td>
    </tr>
  </tbody>
</table>

<br>

<br>

<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/DesignPattern/StatePattern.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:07:39 GMT -->
</html>