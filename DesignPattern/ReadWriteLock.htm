<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/DesignPattern/ReadWriteLock.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:07:49 GMT -->
<head>








  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">








  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">








  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">








  
  
  
  
  
  
  
  
  <title>Read-Write-Lock 模式</title></head>
<body>








<h3><a href="../index.html">From
Gossip@Openhome</a></h3>








<h1><a href="index-2.html">Design Pattern: Read-Write-Lock 模式</a></h1>



<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">



  <tbody>



    <tr>



      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>








      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>








      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>








      <br>







      
      
      
      
      
      
      
      <center>
      
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>








      </center>








 </td>



      <td style="vertical-align: top; width: 690px; text-align: left;">
      <small>

如果有一個資料檔有可能同時間會有許多客戶端對它進行讀取與寫入的動作，則必須注意資料的同步問題，像是兩個寫入者進行寫入時，後一個寫入者的資料會有可
能將次一個寫入者的資料覆蓋掉；而有時您希望讀取者看到的是最新的資料，如果在讀取的時候，有寫入者想要對資料進行寫入，則最好等待讀取者讀取完畢，相反
的如果在寫入時有客戶想要讀取資料，則最好等待，以確保讀出來的資料是最新的資料。<br>


      <br>



讀取寫入的同步問題向來是難解的問題之一，有幾個可行的作法，例如若有寫入的動作時，則讀取者以唯讀模式開啟；或是如果有開啟資料檔的動作時，無論是讀取
或是寫入，後一個開啟檔案的客戶都一律以唯讀模式開啟；還有最乾脆的作法，就是將這個問題由客戶決定，在開啟檔案時若已有其他人開啟中，則提供選項讓客戶
決定要不要以唯讀模式開啟，通常這個作法是提供給檔案的擁有者使用。<br>


      <br><span style="font-weight: bold;">



Read-Write-Lock
模式提供給被讀取或寫入的資料一個鎖定物件，在讀取或寫入時要向鎖定物件形式上讀取鎖定，實際上真正是否鎖定共用資源，由鎖定物件來判斷。</span><br><br></small><small>



一個簡單的Java程式例子如下所示：<br>


      </small>
      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public void readData() {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; lock.readLock();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; doRead();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; lock.readUnLock();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public void writeData() {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; lock.writeLock();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; doWrite();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; lock.writeUnLock();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br>



      </small></div>


      <small><br><br></small><small>



下圖讀取者讀取資料時的Sequence Diagram示例： </small><small>&nbsp;</small><br><small><img style="width: 352px; height: 413px;" alt="Read-Write-Lock" title="Read-Write-Lock" src="images/ReadWriteLock-1.jpg"></small><small><br><br>如果可以同時讀取，現在假設有個讀取者已經取得鎖，另一個讀取者其實也還是可以如下形式上取得鎖定並讀取。<br><br>如果現在只剩一個讀取者，而寫入者試圖進行寫入，它也試圖先取得鎖定，但發現鎖已經被讀取的一方擁有，於是先進入等待，直到讀取的一方解除鎖定為止：<br><br></small><small><img style="width: 442px; height: 379px;" alt="Read-Write-Lock" title="Read-Write-Lock" src="images/ReadWriteLock-2.jpg"></small><small><br><br>


      <br>



而最主要的關鍵還是在於鎖的實現，在Java中可以用wait()、notify()來實現，實現的片段如下：<br>


      </small>

      
      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;private boolean writerFirst = true; // 寫入優先</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public synchronized void readLock() {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; try {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(writingWriters &gt; 0 || </span><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">(writerFirst &amp;&amp; waitingWriters &gt; 0)) {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wait();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; catch(InterruptedException e) {<br>&nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();<br style="font-weight: bold; font-family: Courier New,Courier,monospace;"></span>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; }</span><br><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; readingReaders++;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public synchronized void readUnLock() {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; readingReaders--;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; writerFirst = true;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; notifyAll();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public synchronized void writeLock() {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; waitingWriters++</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; try {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(readingReaders &gt; 0 || writingWriters &gt; 0) {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wait();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; catch(InterruptedException e) {<br></span></small><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</span></small><br style="font-weight: bold; font-family: Courier New,Courier,monospace;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;"></span>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; finally {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; waitingWriters--;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; }</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; writingWriters++;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public synchronized void writeUnLock() {</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; writingWriters--;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; writerFirst = false;</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; notifyAll();</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;} </span><br>



      </small></div>


      <small>
&nbsp; <br>


      其中writerFirst是寫入優先的旗標，它確保只要有寫入的執行緒在等待時，在解除鎖定的時候，可以優先由寫入執行緒取得鎖定，以確保讀取者讀取到
的資料可以是最新的，但缺點就是寫入的動作很頻繁時，讀取者必須等待的機會將增多，相反的若設定為讀取優先，則讀取時的回應性會增高，但資料更新的速率將
會下降，實際使用時要偏好哪一方，必須視應用的場合而定。</small>
      <br>


      </td>



    </tr>



  
  
  </tbody>
</table>



<br>


<br>








<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/DesignPattern/ReadWriteLock.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:07:52 GMT -->
</html>