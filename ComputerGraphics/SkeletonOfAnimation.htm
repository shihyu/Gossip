<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/ComputerGraphics/SkeletonOfAnimation.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:06:37 GMT -->
<head>













  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">









  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type"><title>動畫程式骨架</title></head><body>









<h3><a href="../index.html">From
Gossip@Openhome</a></h3>









<h1><a href="index-2.html">Computer Graphics:&nbsp;動畫程式骨架</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 250px; text-align: center; vertical-align: top;"><script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br><br>
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>







      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>







      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      
      
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      
      
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>







      <br>






      
      
      
      
      
      
      <center>
      
      
      
      
      
      
       <br>







      </center>







 </td>


      <td style="vertical-align: top; width: 690px; text-align: left;">
      <small>







這個主題的動畫程式骨架主要是使用Java程式為範例，使用多執行緒來進行動畫的狀態改變，其它的程式語言其實類似，
最後也補充了不使用多執行緒的版本。</small> 
      
      <h2> Java的程式骨架 </h2>



      
      <pre>package cc.openhome; <br> <br>import java.awt.*;<br>import javax.swing.JApplet;<br> <br>public class AnimationSkeleton extends JApplet implements Runnable { <br>    // 定義多執行緒的方法 <br>    public void run() { <br>        // 動畫迴圈 <br>        while(true) { <br><br>            // 動畫的狀態改變、緩衝區繪圖 <br><br>            this.repaint();  // 重繪畫面 <br><br>            // 執行緒暫停 50 毫秒 <br>            try { <br>                Thread.sleep(50); // 避免Busy loop<br>            } <br>            catch(InterruptedException e) { <br>                    // 例外處理 <br>            } <br>        }  // while結束 <br>    }  // run()結束 <br> <br>    // 改寫update()，避免畫面不連續 <br>    public void update(Graphics g) { <br>        this.paint(g);  // 單純呼叫paint() <br>    } <br> <br>    public void paint(Graphics g) { <br>        super.paint(g);<br>        // 繪圖動作 <br>    } <br>} <br></pre>



      <br>

      <small>
在這個骨架中，實作Runnable以使用多執行緒進行動畫狀態的改變，在這邊要養成一個習慣：「將動畫狀態的改變與繪
圖兩個工作分開。」這可以讓程式的邏輯更為清楚，雖然不使用多執行緒也可以繪製部份的動畫（例如畫框動畫），但上面這個骨架，在額外進行像是緩衝區繪圖時
相當方便。 <br>

      <br>


其中改寫update()的部份是為了避免繪圖的閃爍，這是因為Java在呼叫repaint()之後，repaint()會先呼叫
update()清除畫面，而update()預設會使用白色背景清除畫面，然後再繪上使用者指定的背景，這會造成Java在繪圖時的閃爍，改寫
update()直接呼叫paint()，讓它不重繪畫面，讓重繪的動作由您控制，以避免閃爍的發生。<br>
      <br>
      </small>
      <h2>HTML 5 Canvas<br>
      </h2>
      <small></small>
      <pre>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;meta content="text/html; charset=Big5" http-equiv="content-type"&gt;<br>        &lt;script type="text/javascript"&gt;<br>            window.onload = function() {<br>                var canvas1 = document.getElementById('canvas1');<br>                <br>                <br>                var context = canvas1.getContext('2d');<br>                <br>                setTimeout(function() {<br>                    context.beginPath();<br>                    context.clearRect(0, 0, canvas1.width, canvas1.height);<br>                    <br>                    // 動畫處理、繪圖緩衝區或清除部份區域<br>                    <br>                    context.stroke();<br>                    <br>                    // 每 20 毫秒重繪<br>                   &nbsp;setTimeout(arguments.callee, 20);<br>                    <br>                }, 20); // 每 20 毫秒重繪<br>            };<br>        &lt;/script&gt;<br>    &lt;/head&gt;<br>    &lt;body&gt;       <br>        &lt;canvas id="canvas1" width="640" height="480"&gt;&lt;/canvas&gt;<br>    &lt;/body&gt;<br>&lt;/html&gt;<br></pre>
      <small><br>
如果使用HTML 5
Canvas，由於JavaScript沒有像Java的Thread.sleep()方法，所以可以改用setInterval()來定時執行，動畫進
行最簡單的方式，就是每次清除上一次的畫面再重新繪製，比較複雜的話，可以使用繪圖緩衝區或清除部份區域。</small>

 
      
      <h2> Turbo C 繪圖模式 </h2>



      
      <pre>#include &lt;graphics.h&gt; <br>#include &lt;stdlib.h&gt; <br> <br>void modify(); // 改變動畫狀態 <br>void draw();    // 繪圖 <br> <br>int main(void) { <br>    // 啟動繪圖模式 <br>    initgraph(&amp;driver, &amp;mode, "c:\\"); <br> <br>    // 動畫迴圈 <br>    while(1) { <br>        cleardevice();  // 清除螢幕，不一定需要這個函式 <br>        draw(); <br>        modify(); <br>        // 暫停執行 <br>        sleep(50); // 避免Busy loop    <br>    } <br> <br>    // 關閉繪圖模式 <br>    closegraph(); <br> <br>    return 0; <br>} <br> <br>void modify() { <br>    // 動畫狀態改變 <br>} <br> <br>void draw() { <br>    // 繪圖 <br>}  <br></pre>



      <br>

      <small>
在Turbo C中，所有的繪圖與狀態改變都是在while迴圈中進行，函式的設計與使用者的互動必須多花一些心思，程式的邏輯性會變得複雜一些。<br>
      <br>
      <br>
      <br>
</small></td>


    </tr>


  
  </tbody>
</table>


<br>

<br>









<br>


<br>


<br>









<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/ComputerGraphics/SkeletonOfAnimation.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:06:37 GMT -->
</html>