<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/ArraysClass.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
<head>



  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">



  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">



  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">



  
  
  
  <title>Arrays 類別</title>
</head>


<body>



<h3><a href="../index.html">From
Gossip@Openhome</a></h3>



<h1><a href="index-2.html">Java Gossip: Arrays 類別</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>陣列中基本操作的排序、搜尋與比較等動作是很常見的，在Java中提供了<span style="font-weight: bold;">Arrays類別</span>可以協助您作這幾個動作，Arrays類別位於java.util套件中，它提供了幾個靜態方法可以直接呼叫使用。</small> <br>



      <br>



      
      <table align="left" border="1" width="100%">


  <tbody>


    <tr>


      <td align="left" valign="top"><small>sort() </small></td>



      <td align="left" valign="top"><small>這個方法可以幫助您對指定的陣列排序，所使用的是快速排序法 </small></td>



    </tr>



    <tr>



      <td align="left" valign="top"><small>binarySearch() </small></td>



      <td align="left" valign="top"><small>這個方法可以讓您對已排序的陣列進行二元搜尋，如果找到指定的值就傳回該值所
在的索引，否則就麼回負值 </small></td>



    </tr>



    <tr>



      <td align="left" valign="top"><small>fill() </small></td>



      <td align="left" valign="top"><small>當我們配置一個陣列之後，其會依資料型態來給定預設值，例如整數陣列就初始為
0，您可以使用Arrays.fill()方法來將所有的元素設定為指定的值 </small></td>



    </tr>



    <tr>



      <td align="left" valign="top"><small>equals() </small></td>



      <td align="left" valign="top"><small>比較兩個陣列中的元素值是否全部相等，如果是將傳回true，否則傳回
false </small></td>



    </tr>



  
  
        
        </tbody>
      
      </table>


      <br>


      <br>


      <br>


      <br>


      <br>


      <br>


      <br>

      <small>

下面這個程式示範陣列的排序與搜尋： </small><br>



      
      <ul>

        <li> UseArrays.java </li>

      
      </ul>



      
      <pre>import java.util.Scanner;<br>import java.util.Arrays;<br> <br>public class UseArrays {<br>    public static void main(String[] args) {<br>        Scanner scanner = new Scanner(System.in);<br> <br>        int[] arr = {93, 5, 3, 55, 57, 7, 2 ,73, 41, 91};<br> <br>        System.out.print("排序前: "); <br>        for(int i = 0; i &lt; arr.length; i++) <br>            System.out.print(arr[i] + " "); <br>        System.out.println(); <br> <br>        Arrays.sort(arr);<br> <br>        System.out.print("排序後: "); <br>        for(int i = 0; i &lt; arr.length; i++) <br>            System.out.print(arr[i] + " ");<br> <br>        System.out.print("\n請輸入搜尋值: "); <br>        int key = scanner.nextInt();<br>        int find = -1;<br>        if((find = Arrays.binarySearch(arr, key)) &gt; -1) {<br>            System.out.println("找到值於索引 " + <br>                                       find + " 位置"); <br>        }<br>        else <br>            System.out.println("找不到指定值"); <br>    }<br>} </pre>


      <br>



      <small><span class="postbody">
執行結果：</span></small><br>



      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">



  <tbody>



    <tr>



      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">排序前: 93 5 3 55 57 7 2 73 41 91 <br>


排序後: 2 3 5 7 41 55 57 73 91 93 <br>


請輸入搜尋值: 3 <br>


找到值於索引 1 位置&nbsp;</span></small><span style="color: rgb(255, 255, 255);"><br>



      </span></td>



    </tr>



  
  
        
        </tbody>
      
      </table>



      <br>

      <small>

下面這個程式示範陣列的填充與比較：</small><br>



      
      <ul>

        <li> UseArrays.java </li>

      
      </ul>



      
      <pre>import java.util.Arrays; <br> <br>public class UseArrays { <br>    public static void main(String args[]) { <br>        int[] arr1 = new int[10]; <br>        int[] arr2 = new int[10]; <br>        int[] arr3 = new int[10]; <br> <br>        Arrays.fill(arr1, 5); <br>        Arrays.fill(arr2, 5); <br>        Arrays.fill(arr3, 10); <br> <br>        System.out.print("arr1: "); <br>        for(int i = 0; i &lt; arr1.length; i++) <br>            System.out.print(arr1[i] + " "); <br> <br>        System.out.println("\narr1 = arr2 ? " + <br>                         Arrays.equals(arr1, arr2)); <br>        System.out.println("arr1 = arr3 ? " + <br>                         Arrays.equals(arr1, arr3)); <br>    } <br>}</pre>


      <span class="postbody"><br>

      <small>
執行結果：</small></span><br>



      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">



  <tbody>



    <tr>



      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">arr1: 5 5 5 5 5 5 5 5 5 5 <br>


arr1 = arr2 ? true <br>


arr1 = arr3 ? false </span></small><span style="color: rgb(255, 255, 255);"><br>



      </span></td>



    </tr>



  
  
        
        </tbody>
      
      </table>



      <br>

      <small>

請注意到，您不可以用==來比較兩個陣列的元素值是否相等，==使用於物件比對時，是用來比對兩個物件名稱是否參考至同一個物件，下面這個程式是個簡單的
示範：</small><br>



      
      <ul>

        <li> TestEqual.java </li>

      
      </ul>



      
      <pre>public class TestEqual { <br>    public static void main(String[] args) { <br>        int[] arr1 = new int[5]; <br>        int[] arr2 = new int[5]; <br> <br>        int[] tmp = arr1;<br> <br>        System.out.println(arr1 == tmp); <br>        System.out.println(arr2 == tmp); <br>    } <br>}  <br></pre>



      <span class="postbody"><br>

      <small>
執行結果：</small></span><br>



      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">



  <tbody>



    <tr>



      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">true<br>


false<br>


      </span></small><span style="color: rgb(255, 255, 255);">
      </span></td>



    </tr>



  
  
        
        </tbody>
      
      </table>



      <br>

      <small>

事實上，<a href="http://java.sun.com/j2se/1.5.0/download.jsp"><cite class="urllink">J2SE 5.0</cite></a>
對Arrays類別作了不少的修改與新增，由此可見陣列操作在程式中的重要性，這邊介紹Arrays新增的兩個方法：<span style="font-weight: bold;">deepEquals()</span>與<span style="font-weight: bold;">deepToString()</span>。</small><br>




  
    
      
      <table align="left" border="1" width="100%">


  <tbody>


    <tr>



      <td align="left" valign="top"><small>deepEquals() </small></td>



      <td align="left" valign="top"><small>對陣列作深層比較，簡單的說，您可以對二維仍至三維以上的陣列進行比較是否相
等 </small></td>



    </tr>



    <tr>



      <td align="left" valign="top"><small>deepToString() </small></td>



      <td align="left" valign="top"><small>將陣列值作深層輸出，簡單的說，您可以對二維仍至三維以上的陣列輸出其字串值</small></td>


    </tr>


  
        
        </tbody>
      
      </table>


      <br>


      <br>


      <br>


      <br>

      <small>

直接來看個程式比較清楚：</small><br>



      
      <ul>

        <li> UseArrays.java </li>

      
      </ul>



      
      <pre>import java.util.Arrays; <br> <br>public class UseArrays { <br>    public static void main(String args[]) { <br>        int[][] arr1 = {{1, 2, 3},<br>                        {4, 5, 6},<br>                        {7, 8, 9}};<br>        int[][] arr2 = {{1, 2, 3},<br>                        {4, 5, 6},<br>                        {7, 8, 9}};<br>        int[][] arr3 = {{0, 1, 3},<br>                        {4, 6, 4},<br>                        {7, 8, 9}};<br> <br>        System.out.println("arr1 equals arr2? " + <br>                            Arrays.deepEquals(arr1, arr2));<br>        System.out.println("arr1 equals arr3? " + <br>                            Arrays.deepEquals(arr1, arr3));<br>        System.out.println("arr1 deepToString()\n\t" + <br>                            Arrays.deepToString(arr1));<br>    } <br>} <br></pre>



      <br>

      <small>
執行結果：</small><br>



      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">



  <tbody>



    <tr>



      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">arr1 equals arr2? true<br>


arr1 equals arr3? false<br>


arr1 deepToString()<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [[1, 2, 3], [4, 5, 6], [7, 8, 9]]<br>


      </span></small><span style="color: rgb(255, 255, 255);">
      </span></td>



    </tr>



  
  
        
        </tbody>
      
      </table>


      <br>

      <small>

當然Arrays並不只有以上介紹的功能，總之，如果您之前對Arrays沒這麼的重視，在J2SE
5.0之後，您可以多關照它幾眼，如果您有陣列操作方面的相關需求，可以先查查 <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html"><cite class="urllink">java.util.Arrays</cite></a>
的API文件。</small> </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>


      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      <center>
      
       <br>


      </center>


 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>


<br>



<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/ArraysClass.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
</html>
