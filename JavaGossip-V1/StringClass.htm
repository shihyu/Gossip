<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/StringClass.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
<head>




  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">




  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">




  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">




  
  
  
  
  <title>String 類別</title>
</head>


<body>




<h3><a href="../index.html">From
Gossip@Openhome</a></h3>




<h1><a href="index-2.html">Java Gossip: String 類別</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>由字元所組成的一串文字符號，稱之為字串，在Java中字串可以使用<span style="font-weight: bold;">String類別</span>來建構，例如您可以使用以下的方式來宣告並初始一個字串變數：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">String text = "字串的使用"; </span><br>



      </small></div>



      <small><br>



注意字串的直接指定必須使用""，而字串是使用Unicode字元來建構，在建構一個字串物件變數之後，您可以直接在輸出串流中指定變數名稱來輸出字串，例如：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(text); </span><br>



      </small></div>



      <small><br>



字串的串接在Java中可以直接使用<span style="font-weight: bold;"> +</span> 運算子，+ 本來是加法運算子，而它被重載（Override）為可以直接用於字串的串接，例如您可以這麼使用字串：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">String msg = "哈囉！"; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">msg = msg + "Java Programming！"; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">System.out.println(msg); </span><br>



      </small></div>



      <small><br>



這一段程式碼會在主控台上顯示 "哈囉！Java Programming！"。<br>

      <br>



用於生成字串物件的String類別擁有幾個操作字串的方法，在這邊先介紹幾個常用的： </small>

      <br>




      
      <table align="left" border="1" width="100%">




  <tbody>




    <tr>




      <td align="left" valign="top"><small>length() </small></td>




      <td align="left" valign="top"><small>取得字串的字元長度 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>equals() </small></td>




      <td align="left" valign="top"><small>判斷原字串中的字元是否相等於指定字串中的字元 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>toLowerCase() </small></td>




      <td align="left" valign="top"><small>轉換字串中的英文字元為小寫 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>toUpperCase() </small></td>




      <td align="left" valign="top"><small>轉換字串中的英文字元為大寫 </small></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br clear="all">




      <br>

      <small>



下面這個程式介紹以上的幾個操作字串方法的使用與結果： </small><br>




      
      <ul>

        <li> UseString.java </li>

      
      </ul>




      
      <pre>public class UseString { <br>    public static void main(String[] args) { <br>        String text = "hello"; <br> <br>        System.out.println("字串內容: " + text); <br>        System.out.println("字串長度: " + text.length()); <br>        System.out.println("等於hello? " + <br>                                 text.equals("hello")); <br>        System.out.println("轉為大寫: " + <br>                                 text.toUpperCase()); <br>        System.out.println("轉為小寫: " + <br>                                 text.toLowerCase()); <br>    } <br>} <br></pre>




      <br>

      <small>

執行結果： </small><span class="postbody"></span><br>




      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">




  <tbody>




    <tr>




      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">字串內容: hello <br>



字串長度: 5 <br>



等於hello? true <br>



轉為大寫: HELLO <br>



轉為小寫: hello</span></small><span style="color: rgb(255, 255, 255);"><br>




      </span></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br>

      <small>


如果您要將輸入的字串轉換為整數、浮點數等等資料型態，您可以使用以下各類別所提供的各個靜態剖析方法： </small><br>





      
      <table align="left" border="1" width="100%">




  <tbody>




    <tr>




      <td align="left" valign="top"><small>Byte.parseByte(字串) </small></td>




      <td align="left" valign="top"><small>將字串剖析為位元 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>Short.parseShort(字串) </small></td>




      <td align="left" valign="top"><small>將字串剖析為short整數 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>Integer.parseInt(字串) </small></td>




      <td align="left" valign="top"><small>將字串剖析為integer整數 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>Long.parseLong(字串) </small></td>




      <td align="left" valign="top"><small>將字串剖析為long整數 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>Float.parseFloat(字串) </small></td>




      <td align="left" valign="top"><small>將字串剖析為float浮點數 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>Double.parseDouble(字串) </small></td>




      <td align="left" valign="top"><small>將字串剖析為double浮點數 </small></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br clear="all">




      <br>

      <small>



注意如果指定的字串無法剖析為指定的資料型態數值，則會發生<span style="font-weight: bold;">NumberFormatException</span>例外。 <br>

      <br>



之前宣告字串時，都是以這樣的樣子來宣告： <br>

      </small>




      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">String str = "caterpillar"; </span><br>



      </small></div>



      <small><br>



這樣的宣告方式看來像是基本資料型態宣告，但事實上String並不是Java的基本資料型態，String是<span style="font-weight: bold;">java.lang</span>套件下所提供的類別，如果以配置物件的觀念來宣告字串，應該是這樣的：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">String str = new String("caterpillar"); </span><br>



      </small></div>



      <small><br>



不過事實上它與下面這段是有差別的：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">String str = "caterpillar";</span><br>



      </small></div>



      <small><br>



您可以參考 <a href="ImmutableString.htm">不可變的（immutable）字串</a> 瞭解一下差別在哪邊。<br>

      <br>



一個字串其實是由字元陣列所組成，所以使用String類別宣告字串後，該字串會具有陣列索引的性質，以下介紹幾個與索引相關的方法：</small>

      <br>




      
      <table align="left" border="1" width="100%">




  <tbody>




    <tr>




      <td align="left" valign="top"><small>char charAt(int index) </small></td>




      <td align="left" valign="top"><small>傳回指定索引處的字元 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>int indexOf(int ch) </small></td>




      <td align="left" valign="top"><small>傳回指定字元第一個找到的索引位置 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>int indexOf(String str) </small></td>




      <td align="left" valign="top"><small>傳回指定字串第一個找到的索引位置 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>int lastIndexOf(int ch) </small></td>




      <td align="left" valign="top"><small>傳回指定字元最後一個找到的索引位置 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>String substring(int beginIndex) </small></td>




      <td align="left" valign="top"><small>取出指定索引處至字串尾端的子字串 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>String substring(int beginIndex,
int endIndex) </small></td>




      <td align="left" valign="top"><small>取出指定索引範圍子字串 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>char[] toCharArray() </small></td>




      <td align="left" valign="top"><small>將字串轉換為字元Array </small></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br clear="all">




      <br>

      <small>



下面這個程式是個簡單的示範：</small><br>




      
      <ul>

        <li> UseString.java </li>

      
      </ul>




      
      <pre>public class UseString { <br>    public static void main(String[] args) { <br>        String text = "Your left brain has nothing right.\n" <br>                 + "Your right brain has nothing left.\n"; <br> <br>        System.out.println("字串內容: "); <br>        for(int i = 0; i &lt; text.length(); i++) <br>            System.out.print(text.charAt(i)); <br><br>        System.out.println("\n第一個left: " + <br>                              text.indexOf("left")); <br>        System.out.println("最後一個left: " + <br>                              text.lastIndexOf("left")); <br> <br>        char[] charArr = text.toCharArray(); <br>        System.out.println("\n字元Array內容: "); <br>        for(int i = 0; i &lt; charArr.length; i++) <br>            System.out.print(charArr[i]); <br>    } <br>} <br></pre>




      <br>

      <small>

執行結果：</small><br>




      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">




  <tbody>




    <tr>




      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">字串內容: <br>



Your left brain has nothing right. <br>



Your right brain has nothing left. <br>



      <br>



第一個left: 5 <br>



最後一個left: 64 <br>



      <br>



字元Array內容: <br>



Your left brain has nothing right. <br>



Your right brain has nothing left.</span></small><span style="color: rgb(255, 255, 255);"><br>




      </span></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>



      <br>

      <small>

在建構字串物件時，除了直接指定字串常數之外，您也可以使用字元陣列來建構，例如：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">char[] name = {'c', 'a', 't', 'e', 'r',</span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp; &nbsp;
&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
'p', 'i', 'l', 'l', 'a', 'r'}; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">String str = new String(name); </span><br>



      </small></div>



      <small><br>



上面這個程式片段使用字元陣列name，建構出一個內容為"caterpillar"的字串。<br>

      <br>



除了以上所介紹的幾個方法之外，您應該查查API手冊，瞭解更多有關於String類別的方法，例如我們可以使用<span style="font-weight: bold;">endsWith()</span>方法來過濾檔案名稱，下面這個程式過濾出檔案類型為jpg的檔案： </small>

      <br>



      
      <ul>

        <li> UseString.java </li>

      
      </ul>




      
      <pre>public class <span class="createlink">UseString</span> { <br>    public static void main(String[] args) { <br>        String[] filenames = {"caterpillar.jpg", "cater.gif", <br>                 "bush.jpg", "wuwu.jpg", "clockman.gif"};<br>       System.out.print("過濾出jpg檔案: "); <br>        for(int i = 0; i &lt; filenames.length; i++) <br>            if(filenames[i].endsWith("jpg")) <br>                System.out.print(filenames[i] + " "); <br>        System.out.println(""); <br>    } <br>} <br></pre>




      <br>

      <small>

執行結果： </small><br>




      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">




  <tbody>




    <tr>




      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">過濾出jpg檔案: caterpillar.jpg bush.jpg wuwu.jpg&nbsp;</span></small><span style="color: rgb(255, 255, 255);"><br>




      </span></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>



      <br>

      <small>


Java對於字串處理的能力算是很強的，您應該多多利用線上手冊，瞭解更多有關於 <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html"><cite class="urllink">java.lang.String</cite></a></small>
的方法使用。 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>


      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      <center>
      
       <br>


      </center>


 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>

<br>



<br>




<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/StringClass.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
</html>
