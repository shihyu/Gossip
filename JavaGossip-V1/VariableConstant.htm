<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/VariableConstant.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
<head>




  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">




  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">




  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">




  
  
  
  
  <title>變數、常數</title></head>
<body>




<h3><a href="../index.html">From
Gossip@Openhome</a></h3>




<h1><a href="index-2.html">Java Gossip:&nbsp;<span class="wikilink">變
數、常數</span></a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>資料是儲存在記憶體中的一塊空間中，為了取得資料，您必須知道這塊記憶體空間的位置，然而若使用記憶體位址編號的話相當的不方便，所以使用一個明確的名稱
代表儲存在記憶體中的資料，變數（Variable）是一個指向資料儲存空間的參考，您將資料指定給變數，就是將資料儲存至對應的記憶體空間，呼叫變數，
就是呼叫對應的記憶體空間的資料供您使用。<br>

      <br>




在Java中要使用變數，必須先宣告變數名稱與資料型態，例如： <br>

      </small>





      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int
intNum;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 宣告一個整數變數 </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">double
dblNum;&nbsp;&nbsp; // 宣告一個倍精度浮點數變數 </span><br style="font-weight: bold; font-style: italic;">




      </small></div>




      <small><br>




就如上面所舉的例子，我們使用<span style="font-weight: bold;">int、float、double、char等關鍵字
（Keyword）</span>來宣告變數名稱並指定其資料型態，變數在命名時有一些規則，它不可以使用數字作為開頭，也不可以使用一些特殊字元，像是
*&amp;^%之類的字元，而變數名稱不可以與Java 內定的關鍵字同名，例如int、float、class等等。<br>

      <br>




變數的命名有幾個風格，主要以清楚易懂為主，初學者為了方便，當使用一些簡單的字母來作為變數名稱，這會造成日後程式維護的困難，命名變數時發生同名的情
況也會增加。<br>

      <br>




在過去曾流行過匈牙利命名法，也就是在變數名稱前加上變數的資料型態名稱縮寫，例如intNum用來表示這個變數是int整數資料型態，fltNum表示
一個float資料型態，然而隨著現在程式的發展規模越來越大，加以有成熟IDE之輔助，</small><small style="font-weight: bold;">匈牙利命名法</small><small><span style="font-weight: bold;">已經不被鼓勵。</span><br>

      <br>




過去的程式在撰寫時，變數名稱的長度會有所限制，但現在已無這種困擾，因而現在比較鼓勵用清楚的名稱來表明變數作用，通常會以小寫字母作為開始，並在每個
單字開始時第一個字母使用大寫，例如：<br>

      </small>











      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int ageForStudent; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int ageForTeacher;</span><br>




      </small></div>




      <small><br>




像這樣的名稱可以讓人一眼就看出這個變數的作用，這樣的命名方式，在Java程式設計領域中是最常看到的一種。<br>

      <br>




變數名稱可以使用底線作為開始，通常使用底線作為開始的變數名稱，表示它是<span style="font-weight: bold;">私用的
（Private）</span>，只在程式的某個範圍使用，外界並不需要知道有這個變數的存在，通常這樣的變數名稱常用於物件導向程式設計中類別的<span style="font-weight: bold;">私有成員（Private member）</span>，這樣的命名方式在Java中偶而也
會看到（比較常見於C++的程式撰寫中），一個宣告的例子如下：<br>

      </small>





      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">double
_window_center_x; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">double
_window_center_y; </span><br>




      </small></div>

      <small>


&nbsp;<br>




當您在Java中宣告一個變數，就會配置一塊記憶體空間給它，這塊空間中原先可能就有資料，也因此變數在宣告後的值是不可預期的，Java對於安全性的要
求極高，您不可以宣告變數後，而在未指定任何值給它之前就使用它，編譯器在編譯時會回報這個錯誤，例如若宣告變數var卻沒有指定值給它，則會顯示以下訊
息： <br>

      </small>


      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace; color: rgb(255, 0, 0);">variable var might not
have been initialized</span><br>




      </small></div>




      <small><br>




可以的話，儘量在變數宣告後初始其值，您可以使用<span style="font-weight: bold;">「指定運算子」
（Assignment operator）=</span>來指定變數的值，例如： <br>

      </small>


      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">int ageForStudent = 0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">double
scoreForStudent = 0.0; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">char
levelForStudent = 'A'; </span><br>




      </small></div>




      <small><br>




上面這段程式在宣告變數的時候，同時指定變數的儲存值，而您也看到如何指定字元給字元變數，字元在指定時需使用引號<span style="font-weight: bold;"> ' '</span>
來包括；在指定浮點數時，會習慣使用小數的方式來指定，如0.0，在Java中寫下0.0這麼一個常數的話，其<span style="font-weight: bold;">預設為double資料型態</span>。<br>

      <br>




在宣告變數之後，您可以直接呼叫變數名稱來取得其所儲存的值，下面這個程式是個簡單的示範：</small>


      <br>




      
      <ul>

        <li>Variable.java</li>

      
      </ul>




      
      <pre>public class Variable { <br>    public static void main(String[] args) { <br>        int ageForStudent = 5;<br>        double scoreForStudent = 80.0; <br>        char levelForStudent = 'B'; <br><br>        System.out.println("年級\t 得分\t 等級"); <br>        System.out.printf("%4d\t %4.1f\t %4c", <br>                           ageForStudent, scoreForStudent, levelForStudent); <br>    } <br>}</pre>




      <small><br>

      <span class="postbody">
執行結果：</span></small>


      <br>




      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">




  <tbody>




    <tr>




      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">&nbsp;年級&nbsp;&nbsp;&nbsp;&nbsp;
得分&nbsp;&nbsp;&nbsp; 等級<br>




&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;5&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;
80.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;B</span></small><span style="color: rgb(255, 255, 255);"><br>




      </span></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br>

      <small>


在Java中寫下一個數值，稱之為<span style="font-weight: bold;">字面常量（Literal constant）</span>，
它會存在記憶體的某個位置，您無法改變它的值；而在使用變數的時候，也會使用一種叫「常數」的變數，嚴格來說它並不是常數，只不過指定數值給這個變數之
後，就不可再改變其值，有人為了區分其與常數的差別，還給了它一個奇怪的名稱：「常數變數」。<br>

      <br>




先不要管「常數變數」這個怪怪的名稱，其實它終究是個變數而已，只是在宣告變數名稱的同時，加上<span style="font-weight: bold;">"final"</span>來限定，只不過這個變數一但指定了值，就不可以再改變它的值，如
果程式中有其它程式碼試圖改變這個變數，編譯器會先檢查出這個錯誤，例如： <br>

      </small>





      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">final int maxNum = 10; </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">




      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">maxNum = 20;</span><br>




      </small></div>




      <small><br>




這一段程式碼中的maxNum變數使用final來限定，所以它在指定為10之後，就不可以再指定值給它，所以第二次指定會被編譯器指出錯誤： <br>

      </small>


      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace; color: rgb(255, 0, 0);">cannot assign a value
to final variable maxNum</span><br>




      </small></div>




      <small><br>




使用final來限定的變數，目的通常就是不希望其它的程式碼來變動它的值，例如用於迴圈計數次數的指定（迴圈之後就會學到），或是像圓周率PI的指定。</small> </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>


      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>


      <br>

      
      <center>
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>


      </center>


 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>




<br>




<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>
<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V1/VariableConstant.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:16 GMT -->
</html>