<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/CallableFuture.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
<head>










  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">










  
  
  
  
  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">










  
  
  
  
  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">










  
  
  
  
  
  
  
  
  
  
  <title>Callable 與 Future</title>
</head>


<body>










<h3><a href="../index.html">From
Gossip@Openhome</a></h3>










<h1><a href="index-2.html">Java Gossip:&nbsp;Callable 與 Future</a></h1>










<span style="font-weight: bold;"></span>
<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>Callable與Future類別可以協助您完成 <a href="../DesignPattern/FuturePattern.htm">Future 模式</a> 。<br>

      <br>


Callable是個介面，與Runnable類似，有個必須實作的方法，可以啟動為另一個執行緒來執行，不過Callable工作完成後，可以傳回結果物件，Callable介面的定義如下：<br>

      </small>

      
      <div style="margin-left: 40px;"><small><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">public interface Callable&lt;V&gt;
{
   </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp; &nbsp; V call() throws Exception;
      </span><br style="font-weight: bold; font-family: Courier New,Courier,monospace;">


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">}
      </span><br>


      </small></div>


      <small><br>


例如您可以使用Callable來完成某個費時的工作，工作結束後傳回結果物件，例如求質數：</small><br>


      
      <ul>

        <li>PrimeCallable.java</li>

      
      </ul>


      
      <pre>package onlyfun.caterpillar;<br><br>import java.util.ArrayList;<br>import java.util.List;<br>import java.util.concurrent.Callable;<br><br>public class PrimeCallable <span style="font-weight: bold;">implements Callable&lt;int[]&gt;</span> {<br>    private int max;<br>	<br>    public PrimeCallable(int max) {<br>    	this.max = max;<br>    }<br>	<br>    <span style="font-weight: bold;">public int[] call() throws Exception {</span><br>        int[] prime = new int[max+1]; <br>        <br>        List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(); <br><br>        for(int i = 2; i &lt;= max; i++) <br>            prime[i] = 1; <br><br>        for(int i = 2; i*i &lt;= max; i++) { // 這邊可以改進 <br>            if(prime[i] == 1) { <br>                for(int j = 2*i; j &lt;= max; j++) { <br>                    if(j % i == 0) <br>                        prime[j] = 0; <br>                } <br>            } <br>        } <br><br>        for(int i = 2; i &lt; max; i++) { <br>            if(prime[i] == 1) { <br>                list.add(i); <br>            } <br>        }<br>        <br>        int[] p = new int[list.size()];<br>        for(int i = 0; i &lt; p.length; i++) {<br>        	p[i] = list.get(i).intValue();<br>        }<br>        <br>        return p;<br>    <span style="font-weight: bold;">}</span><br>	<br>}</pre>


      <br>

      <small>
假設現在求質數的需求是在啟動PrimeCallable後的幾秒之後，則我們可以搭配Future來取得Callable執行的結果，在未來的時間點取得結果，例如：</small><br>


      
      <ul>

        <li>FutureDemo.java</li>

      
      </ul>


      
      <pre>package onlyfun.caterpillar;<br><br>import java.util.concurrent.Callable;<br>import java.util.concurrent.ExecutionException;<br>import java.util.concurrent.FutureTask;<br><br>public class FutureDemo {<br>    public static void main(String[] args) {<br><span style="font-weight: bold;">        Callable&lt;int[]&gt; primeCallable = new PrimeCallable(1000);</span><br style="font-weight: bold;"><span style="font-weight: bold;">        FutureTask&lt;int[]&gt; primeTask = new FutureTask&lt;int[]&gt;(primeCallable);</span><br>		<br><span style="font-weight: bold;">        Thread t = new Thread(primeTask);</span><br style="font-weight: bold;"><span style="font-weight: bold;">        t.start();</span><br>		<br>        try {<br>            // 假設現在做其它事情<br>            Thread.sleep(5000);<br>			<br>            // 回來看看質數找好了嗎<br>            if(<span style="font-weight: bold;">primeTask.isDone()</span>) {<br><span style="font-weight: bold;">                int[] primes = primeTask.get();</span><br>                for(int prime : primes) {<br>                    System.out.print(prime + " ");<br>                }<br>                System.out.println();<br>            }<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        } catch (ExecutionException e) {<br>            e.printStackTrace();<br>        }	<br>    }<br>}</pre>


      <br>

 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>&nbsp;
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>



      <comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <comment title=" adsense for content" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->&#160;</script>&nbsp;
      
      
      <script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js"></script><comment title=" adsense for content end" xmlns="http://disruptive-innovations.com/zoo/nvu"></comment><br>



      <br>


      
      
      <center>
      
      
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript" src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br>



      </center>



 </td>


    </tr>


  
  </tbody>
</table>


<br>

<br>










<script src="../../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-143766-1";
urchinTracker();
</script>
</body>

<!-- Mirrored from openhome.cc/Gossip/JavaGossip-V2/CallableFuture.htm by HTTrack Website Copier/3.x [XR&CO'2008], Sun, 28 Jul 2013 09:14:19 GMT -->
</html>
